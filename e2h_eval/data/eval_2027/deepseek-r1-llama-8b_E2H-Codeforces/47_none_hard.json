{
    "start": 1758292066.633336,
    "end": 1758292110.8177457,
    "start-formatted": "2025-09-19 23:27 KST",
    "end-formatted": "2025-09-19 23:28 KST",
    "gpu": 2,
    "pid": 47,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Neko does Maths\n\nNeko loves divisors. During the latest number theory lesson, he got an interesting exercise from his math teacher.Neko has two integers $$$a$$$ and $$$b$$$. His goal is to find a non-negative integer $$$k$$$ such that the least common multiple of $$$a+k$$$ and $$$b+k$$$ is the smallest possible. If there are multiple optimal integers $$$k$$$, he needs to choose the smallest one.Given his mathematical talent, Neko had no trouble getting Wrong Answer on this problem. Can you help him solve it?\n\n## Input\nThe only line contains two integers $$$a$$$ and $$$b$$$ ($$$1 \\le a, b \\le 10^9$$$).\n\n## Output\nPrint the smallest non-negative integer $$$k$$$ ($$$k \\ge 0$$$) such that the lowest common multiple of $$$a+k$$$ and $$$b+k$$$ is the smallest possible.If there are many possible integers $$$k$$$ giving the same value of the least common multiple, print the smallest one.\n\n## Example\n### Input\n['6 10', '21 31', '5 10']\n\n### Output\n['2', '9', '0']\n\n## Note\nIn the first test, one should choose $$$k = 2$$$, as the least common multiple of $$$6 + 2$$$ and $$$10 + 2$$$ is $$$24$$$, which is the smallest least common multiple possible.\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is a hard question."
        }
    ],
    "thought": "",
    "response": "```python\nimport math\n\ndef gcd(a, b):\n    \"\"\"Compute the greatest common divisor of a and b\"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"Compute the lowest common multiple of a and b\"\"\"\n    return a * b // gcd(a, b)\n\ndef solve(a, b):\n    \"\"\"Find the smallest non-negative integer k such that the least common multiple of a+k and b+k is the smallest possible\"\"\"\n    if a == b:\n        return 0\n    \n    # Find the greatest common divisor of a and b\n    g = gcd(a, b)\n    \n    # If the greatest common divisor is not 1, we can find a k that makes the least common multiple equal to the product of a and b\n    if g != 1:\n        return g - (a % g)\n    \n    # Otherwise, we need to check all possible values of k\n    min_lcm = float('inf')\n    best_k = 0\n    for k in range(1000000):  # We assume that the answer will not be larger than 1,000,000\n        lcm_val = lcm(a + k, b + k)\n        if lcm_val < min_lcm:\n            min_lcm = lcm_val\n            best_k = k\n    \n    return best_k\n\ndef main():\n    \"\"\"Read input from standard input and print the output to standard output\"\"\"\n    a, b = map(int, input().split())\n    print(solve(a, b))\n\nif __name__ == \"__main__\":\n    main()\n```\n\nThis script first computes the greatest common divisor of `a` and `b` using the Euclidean algorithm. If the greatest common divisor is not 1, it returns the value of `k` that makes the least common multiple equal to the product of `a` and `b`. Otherwise, it checks all possible values of `k` to find the one that minimizes the least common multiple.\n\nNote that this script assumes that the answer will not be larger than 1,000,000. If you expect larger values of `k`, you should increase the upper bound of the loop accordingly.",
    "ground_truth": "N/A",
    "extracted_answer": "import math\n\ndef gcd(a, b):\n    \"\"\"Compute the greatest common divisor of a and b\"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"Compute the lowest common multiple of a and b\"\"\"\n    return a * b // gcd(a, b)\n\ndef solve(a, b):\n    \"\"\"Find the smallest non-negative integer k such that the least common multiple of a+k and b+k is the smallest possible\"\"\"\n    if a == b:\n        return 0\n    \n    # Find the greatest common divisor of a and b\n    g = gcd(a, b)\n    \n    # If the greatest common divisor is not 1, we can find a k that makes the least common multiple equal to the product of a and b\n    if g != 1:\n        return g - (a % g)\n    \n    # Otherwise, we need to check all possible values of k\n    min_lcm = float('inf')\n    best_k = 0\n    for k in range(1000000):  # We assume that the answer will not be larger than 1,000,000\n        lcm_val = lcm(a + k, b + k)\n        if lcm_val < min_lcm:\n            min_lcm = lcm_val\n            best_k = k\n    \n    return best_k\n\ndef main():\n    \"\"\"Read input from standard input and print the output to standard output\"\"\"\n    a, b = map(int, input().split())\n    print(solve(a, b))\n\nif __name__ == \"__main__\":\n    main()",
    "score": 0,
    "metadata": {
        "prompt_token_count": 421,
        "completion_token_count": 458,
        "thoughts_token_count": 0
    }
}