{
    "start": 1758278119.5183501,
    "end": 1758278308.2188103,
    "start-formatted": "2025-09-19 19:35 KST",
    "end-formatted": "2025-09-19 19:38 KST",
    "gpu": 2,
    "pid": 41,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Zoning Restrictions Again\n\nYou are planning to build housing on a street. There are $$$n$$$ spots available on the street on which you can build a house. The spots are labeled from $$$1$$$ to $$$n$$$ from left to right. In each spot, you can build a house with an integer height between $$$0$$$ and $$$h$$$.In each spot, if a house has height $$$a$$$, you will gain $$$a^2$$$ dollars from it.The city has $$$m$$$ zoning restrictions. The $$$i$$$-th restriction says that the tallest house from spots $$$l_i$$$ to $$$r_i$$$ (inclusive) must be at most $$$x_i$$$.You would like to build houses to maximize your profit. Determine the maximum profit possible.\n\n## Input\nThe first line contains three integers $$$n$$$, $$$h$$$, and $$$m$$$ ($$$1 \\leq n,h,m \\leq 50$$$) — the number of spots, the maximum height, and the number of restrictions.Each of the next $$$m$$$ lines contains three integers $$$l_i$$$, $$$r_i$$$, and $$$x_i$$$ ($$$1 \\leq l_i \\leq r_i \\leq n$$$, $$$0 \\leq x_i \\leq h$$$) — left and right limits (inclusive) of the $$$i$$$-th restriction and the maximum possible height in that range.\n\n## Output\nPrint a single integer, the maximum profit you can make.\n\n## Example\n### Input\n['3 3 3\\n1 1 1\\n2 2 3\\n3 3 2', '4 10 2\\n2 3 8\\n3 4 7']\n\n### Output\n['14', '262']\n\n## Note\nIn the first example, there are $$$3$$$ houses, the maximum height of a house is $$$3$$$, and there are $$$3$$$ restrictions. The first restriction says the tallest house between $$$1$$$ and $$$1$$$ must be at most $$$1$$$. The second restriction says the tallest house between $$$2$$$ and $$$2$$$ must be at most $$$3$$$. The third restriction says the tallest house between $$$3$$$ and $$$3$$$ must be at most $$$2$$$.In this case, it is optimal to build houses with heights $$$[1, 3, 2]$$$. This fits within all the restrictions. The total profit in this case is $$$1^2 + 3^2 + 2^2 = 14$$$.In the second example, there are $$$4$$$ houses, the maximum height of a house is $$$10$$$, and there are $$$2$$$ restrictions. The first restriction says the tallest house from $$$2$$$ to $$$3$$$ must be at most $$$8$$$. The second restriction says the tallest house from $$$3$$$ to $$$4$$$ must be at most $$$7$$$.In this case, it's optimal to build houses with heights $$$[10, 8, 7, 7]$$$. We get a profit of $$$10^2+8^2+7^2+7^2 = 262$$$. Note that there are two restrictions on house $$$3$$$ and both of them must be satisfied. Also, note that even though there isn't any explicit restrictions on house $$$1$$$, we must still limit its height to be at most $$$10$$$ ($$$h=10$$$).\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is an easy question."
        }
    ],
    "thought": "Okay, so I have this programming problem to solve. Let's read through it carefully.\n\nThe problem is about building houses on a street with certain restrictions and maximizing the profit. Each house can be built on a spot, and each spot has a height between 0 and h. The profit for each spot is the square of its height. But there are m restrictions. Each restriction says that in a specific range of spots (l_i to r_i), the tallest house must be at most x_i. My goal is to find the maximum possible profit by choosing the heights appropriately.\n\nHmm. So, how do I model this? It feels like a problem where I need to assign heights to each spot, subject to some constraints, and maximize the sum of squares. \n\nLet me think about the constraints. Each restriction l_i to r_i imposes that the maximum height in that interval is <= x_i. So for all such intervals, the maximum in them can't exceed their respective x_i.\n\nThis sounds a bit like a constraint satisfaction problem. Since the numbers are small (n, h, m up to 50), maybe a brute-force approach could work, but I'm not sure. Alternatively, dynamic programming might be an option.\n\nWait, but even with n=50, trying all possible height combinations would be 51^50 possibilities, which is way too big. So brute force is out of the question.\n\nI need a smarter way. Maybe model this as a graph or use some kind of interval-based constraints.\n\nAnother idea: since the constraints are on ranges, perhaps I can represent the allowed maximums for each position and propagate them efficiently.\n\nLet me think about each spot. For each spot i, what's the maximum height it can have, considering all the restrictions that include it?\n\nBut that's not enough because multiple restrictions might overlap. For example, a spot could be part of multiple restrictions, each of which sets a lower upper bound on its maximum height.\n\nWait, no. Because each restriction requires that the maximum in a certain interval is at most x_i. So for each spot i, the maximum height it can have is the minimum of all x_i's from all restrictions that include i, but also considering the global maximum h.\n\nWait, let's clarify: for spot i, any restriction that includes i will impose that the height of i cannot be higher than x_j, where j is that restriction. So the maximum possible height for spot i is the minimum of all x_j's for which i is in [l_j, r_j], and also the global h. But wait, no. Because the x_j's are the maximums for their intervals. So if a spot is part of multiple restrictions, each of those restrictions limits the maximum height of the entire interval. Therefore, for spot i, the maximum possible height is the minimum of all x_j's from the restrictions that cover i, as well as h.\n\nBut that's not sufficient. Because even if a spot isn't directly limited by a restriction, it might be part of a larger interval that is. Wait, no. For example, consider a spot i that is in the middle of a longer interval. Suppose that the longer interval has an x value of 5, but another restriction that covers a smaller interval including i with x=3. Then the maximum height for spot i is 3 because the interval [i, i] is covered by the second restriction, which is stricter.\n\nSo, for each spot i, the maximum possible height is the minimum of all x_j where l_j <= i <= r_j, and then taking the minimum with h. But wait, that's not exactly right. Because the x_j's may vary for different restrictions, and each restriction affects the maximum in its own interval.\n\nWait, no. For each spot i, any restriction that includes i contributes an upper bound on the maximum height in that restriction's interval. So for spot i, the maximum height it can have is the minimum of all x_j's among the restrictions that cover i, and also the global h. Because if any of those x_j's is less than h, then the spot can't exceed that x_j to satisfy that restriction.\n\nWait, but maybe that's not accurate. Because suppose a spot i is covered by two restrictions: one with x=3 and another with x=4. Then, the maximum height for spot i is min(3,4) = 3, because the first restriction requires that the maximum in its interval (which includes i) is at most 3, which is more restrictive than the second.\n\nYes, that makes sense. So for each spot i, the maximum possible height is the minimum of all x_j's for which i is in [l_j, r_j], and the global h. But wait, because the x_j's could be from any overlapping restrictions.\n\nSo for each spot i, compute the minimum x among all the restrictions that cover it, and then take the minimum with h. That gives the maximum allowed height for",
    "response": "To solve this problem, we need to determine the maximum profit possible by building houses on a street with given constraints. Each house can be built on a spot with a height between 0 and a given maximum height, and each spot contributes to the total profit based on the square of its height. The challenge is to maximize this profit while adhering to the city's zoning restrictions.\n\n### Approach\n1. **Understand the Constraints**: Each restriction specifies that the tallest house in a given interval must not exceed a certain height. This means that for each spot, its height is constrained by all applicable restrictions.\n2. **Determine Maximum Height per Spot**: For each spot, compute the maximum allowable height as the minimum value from all applicable restrictions (considering the global maximum height `h`). This ensures that all constraints are satisfied.\n3. **Calculate Profit**: Once the maximum allowable heights for each spot are determined, compute the total profit by summing the squares of these heights.\n\n### Solution Code\n```python\nn, h, m = map(int, input().split())\nrestrictions = []\nfor _ in range(m):\n    l, r, x = map(int, input().split())\n    restrictions.append((l-1, r-1, x))  # Convert to 0-based indices\n\nmax_heights = [h] * n  # Initialize all to h\n\nfor l, r, x in restrictions:\n    for i in range(l, r+1):\n        if x < max_heights[i]:\n            max_heights[i] = x\n\n# Now calculate the profit\nprofit = 0\nfor height in max_heights:\n    profit += height ** 2\n\nprint(profit)\n```\n\n### Explanation\n1. **Reading Input**: The input consists of the number of spots, maximum height, and number of restrictions. Each restriction is read and stored in a list.\n2. **Adjusting Heights**: For each restriction, iterate over the affected spots and adjust their maximum allowable height to be the minimum of the current height and the restriction's height.\n3. **Compute Profit**: Sum the squares of the maximum allowable heights for each spot to get the total profit.\n\nThis approach efficiently ensures that all constraints are respected while maximizing the profit, leveraging the small input sizes to use a straightforward iterative method.",
    "ground_truth": "N/A",
    "extracted_answer": "n, h, m = map(int, input().split())\nrestrictions = []\nfor _ in range(m):\n    l, r, x = map(int, input().split())\n    restrictions.append((l-1, r-1, x))  # Convert to 0-based indices\n\nmax_heights = [h] * n  # Initialize all to h\n\nfor l, r, x in restrictions:\n    for i in range(l, r+1):\n        if x < max_heights[i]:\n            max_heights[i] = x\n\n# Now calculate the profit\nprofit = 0\nfor height in max_heights:\n    profit += height ** 2\n\nprint(profit)",
    "score": 1,
    "metadata": {
        "prompt_token_count": 811,
        "completion_token_count": 470,
        "thoughts_token_count": 1025
    }
}