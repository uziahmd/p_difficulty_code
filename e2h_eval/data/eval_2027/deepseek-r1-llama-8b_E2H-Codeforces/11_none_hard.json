{
    "start": 1758100882.7102945,
    "end": 1758100897.2062016,
    "start-formatted": "2025-09-17 18:21 KST",
    "end-formatted": "2025-09-17 18:21 KST",
    "gpu": 2,
    "pid": 11,
    "use_openrouter": true,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Soft Drinking\n\nThis winter is so cold in Nvodsk! A group of n friends decided to buy k bottles of a soft drink called \"Take-It-Light\" to warm up a bit. Each bottle has l milliliters of the drink. Also they bought c limes and cut each of them into d slices. After that they found p grams of salt.To make a toast, each friend needs nl milliliters of the drink, a slice of lime and np grams of salt. The friends want to make as many toasts as they can, provided they all drink the same amount. How many toasts can each friend make?\n\n## Input\nThe first and only line contains positive integers n, k, l, c, d, p, nl, np, not exceeding 1000 and no less than 1. The numbers are separated by exactly one space.\n\n## Output\nPrint a single integer — the number of toasts each friend can make.\n\n## Example\n### Input\n['3 4 5 10 8 100 3 1', '5 100 10 1 19 90 4 3', '10 1000 1000 25 23 1 50 1']\n\n### Output\n['2', '3', '0']\n\n## Note\nA comment to the first sample: Overall the friends have 4 * 5 = 20 milliliters of the drink, it is enough to make 20 / 3 = 6 toasts. The limes are enough for 10 * 8 = 80 toasts and the salt is enough for 100 / 1 = 100 toasts. However, there are 3 friends in the group, so the answer is min(6, 80, 100) / 3 = 2.\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is a hard question."
        }
    ],
    "thought": "",
    "response": "```python\ndef soft_drinking():\n    n, k, l, c, d, p, nl, np = map(int, input().split())\n\n    total_drink = k * l\n    total_limes = c * d\n    total_salt = p\n\n    max_toasts_per_person = min(total_drink // (nl * n), total_limes // n, total_salt // (np * n))\n\n    return str(max_toasts_per_person)\n\n\nif __name__ == \"__main__\":\n    num_cases = 1\n    for _ in range(num_cases):\n        print(soft_drinking())\n```\n\nThis Python script defines a function `soft_drinking()` that reads the input from standard input and calculates the maximum number of toasts each person can make. It uses the `min()` function to find the smallest of three values: the total drink available divided by the drink per toast per person, the total limes available divided by the limes per toast per person, and the total salt available divided by the salt per toast per person.\n\nThe script then enters a loop where it calls the `soft_drinking()` function `num_cases` times and prints the results. In this case, `num_cases` is set to 1, so the function is called once.\n\nNote that this script assumes that the input is provided in the format specified in the problem statement, with the numbers separated by exactly one space. If the input format is different, the script may need to be modified accordingly.",
    "ground_truth": "N/A",
    "extracted_answer": "def soft_drinking():\n    n, k, l, c, d, p, nl, np = map(int, input().split())\n\n    total_drink = k * l\n    total_limes = c * d\n    total_salt = p\n\n    max_toasts_per_person = min(total_drink // (nl * n), total_limes // n, total_salt // (np * n))\n\n    return str(max_toasts_per_person)\n\n\nif __name__ == \"__main__\":\n    num_cases = 1\n    for _ in range(num_cases):\n        print(soft_drinking())",
    "score": 1,
    "metadata": {
        "prompt_token_count": 513,
        "completion_token_count": 308,
        "thoughts_token_count": 0
    }
}