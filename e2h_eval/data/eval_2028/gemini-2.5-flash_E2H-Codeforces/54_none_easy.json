{
    "start": 1758293701.4765499,
    "end": 1758293743.8443496,
    "start-formatted": "2025-09-19 23:55 KST",
    "end-formatted": "2025-09-19 23:55 KST",
    "gpu": 2,
    "pid": 54,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Mister B and Angle in Polygon\n\nOn one quiet day all of sudden Mister B decided to draw angle a on his field. Aliens have already visited his field and left many different geometric figures on it. One of the figures is regular convex n-gon (regular convex polygon with n sides).That's why Mister B decided to use this polygon. Now Mister B must find three distinct vertices v1, v2, v3 such that the angle  (where v2 is the vertex of the angle, and v1 and v3 lie on its sides) is as close as possible to a. In other words, the value  should be minimum possible.If there are many optimal solutions, Mister B should be satisfied with any of them.\n\n## Input\nFirst and only line contains two space-separated integers n and a (3 ≤ n ≤ 105, 1 ≤ a ≤ 180) — the number of vertices in the polygon and the needed angle, in degrees.\n\n## Output\nPrint three space-separated integers: the vertices v1, v2, v3, which form . If there are multiple optimal solutions, print any of them. The vertices are numbered from 1 to n in clockwise order.\n\n## Example\n### Input\n['3 15', '4 67', '4 68']\n\n### Output\n['1 2 3', '2 1 3', '4 1 2']\n\n## Note\nIn first sample test vertices of regular triangle can create only angle of 60 degrees, that's why every possible angle is correct.Vertices of square can create 45 or 90 degrees angles only. That's why in second sample test the angle of 45 degrees was chosen, since |45 - 67| < |90 - 67|. Other correct answers are: \"3 1 2\", \"3 2 4\", \"4 2 3\", \"4 3 1\", \"1 3 4\", \"1 4 2\", \"2 4 1\", \"4 1 3\", \"3 1 4\", \"3 4 2\", \"2 4 3\", \"2 3 1\", \"1 3 2\", \"1 2 4\", \"4 2 1\".In third sample test, on the contrary, the angle of 90 degrees was chosen, since |90 - 68| < |45 - 68|. Other correct answers are: \"2 1 4\", \"3 2 1\", \"1 2 3\", \"4 3 2\", \"2 3 4\", \"1 4 3\", \"3 4 1\".\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is an easy question."
        }
    ],
    "thought": "",
    "response": "```python\ndef solve():\n    n, a = map(int, input().split())\n\n    min_diff = float('inf')\n    best_v1, best_v2, best_v3 = -1, -1, -1\n\n    # Fix v2 as vertex 2\n    v2 = 2\n\n    # Iterate through possible v1 (from 3 to n)\n    # v1 will be the first point of the angle, v2 the vertex, v3 the third point\n    # We can fix v2 = 2 and v3 = 1 to simplify.\n    # The angle will be formed by vertices v3, v2, v1\n    # v2 is the vertex of the angle.\n    # The vertices are 1-indexed.\n    # Angle is formed by (v3, v2, v1)\n    # We fix v2 = 2.\n    # We fix v3 = 1.\n    # Then v1 can be any vertex from 3 to n.\n    # The angle formed by vertices (1, 2, k) where k is the third vertex.\n    # The angle is (k-1) * (180 / n) degrees.\n    # This is because the central angle subtended by one side is 360/n.\n    # The inscribed angle subtended by an arc of k sides is (k * 360/n) / 2 = k * 180/n.\n    # Here, the arc is from vertex 1 to vertex k, with vertex 2 being the vertex of the angle.\n    # The number of sides between vertex 1 and vertex k (not passing through vertex 2) is k-1.\n    # So the angle is (k-1) * (180 / n).\n\n    # The angle is formed by vertices v3, v2, v1.\n    # Let v2 be vertex 2.\n    # Let v3 be vertex 1.\n    # Let v1 be vertex k, where k ranges from 3 to n.\n    # The number of edges between vertex 1 and vertex k (clockwise, not passing through 2) is k-1.\n    # The inscribed angle subtended by an arc of (k-1) edges is (k-1) * (180 / n).\n    # This formula gives all possible distinct angles in a regular n-gon.\n    # The possible values for (k-1) range from 2 to n-1.\n    # So the possible number of edges are m = 1, 2, ..., n-2.\n    # The angles are m * (180 / n).\n\n    for m in range(1, n - 1): # m is the number of edges between v1 and v3, with v2 as the vertex\n        current_angle = m * (180 / n)\n        diff = abs(current_angle - a)\n\n        if diff < min_diff:\n            min_diff = diff\n            # v2 is the vertex of the angle, so it's fixed at 2.\n            # v3 is one endpoint, fixed at 1.\n            # v1 is the other endpoint.\n            # If there are m edges between v1 and v3 (not passing through v2),\n            # and v3 is 1, v2 is 2, then v1 must be 1 + m + 1 = m + 2.\n            # (Assuming vertices are 1-indexed and we go clockwise)\n            # v3 = 1\n            # v2 = 2\n            # v1 = 2 + m (this is 1-indexed, meaning m steps from 2)\n            # The vertices are 1, 2, ..., n.\n            # Let v2 be 2.\n            # Let v3 be 1.\n            # Let v1 be 2 + m.\n            # The number of vertices between 1 and (2+m) (exclusive, clockwise) is m.\n            # The number of edges is m+1.\n            # No, the number of edges between v1 and v3 is m.\n            # If v3 = 1, v2 = 2, then v1 = 2 + m.\n            # The angle is formed by (v3, v2, v1).\n            # The vertices are 1, 2, ..., n.\n            # Let v2 be vertex 2.\n            # Let v3 be vertex 1.\n            # Let v1 be vertex (2 + m).\n            # This ensures v1, v2, v3 are distinct.\n            # v1 must be <= n. So 2 + m <= n => m <= n - 2.\n            # So m ranges from 1 to n-2.\n            best_v1 = 2 + m\n            best_v2 = 2\n            best_v3 = 1\n            \n            # This ensures v1, v2, v3 are distinct and valid.\n            # v3 = 1\n            # v2 = 2\n            # v1 = 3, 4, ..., n.\n            # The number of edges between 1 and v1 (clockwise, not through 2) is v1 - 1.\n            # So the angle is (v1 - 1 - 1) * (180 / n) if v2 is 2 and v3 is 1.\n            # No, this is not correct.\n            # The angle formed by (v_i, v_j, v_k) where v_j is the vertex.\n            # The angle is (number of edges between v_i and v_k, not passing through v_j) * (180 / n).\n            # Let's fix v2 = 2.\n            # Let v3 = 1.\n            # Let v1 = k.\n            # k must be from 3 to n.\n            # The number of edges between 1 and k (clockwise) is k-1.\n            # The number of edges between 1 and k (counter-clockwise) is n - (k-1).\n            # The arc that does NOT contain vertex 2 is the one we care about.\n            # Since v2 is 2, and v3 is 1, and v1 is k (k > 2), the arc from 1 to k does not contain 2.\n            # The number of edges in this arc is k-1.\n            # So the angle is (k-1) * (180 / n).\n            # Here k is the vertex index, not the number of edges.\n            # So let's use k for the vertex index.\n            # k ranges from 3 to n.\n            # The number of edges is k-1. No, it's k-1-1 = k-2.\n            # The number of edges between vertex 1 and vertex k, when vertex 2 is the angle vertex, is (k-1) - 1 = k-2.\n            # Example: n=4.\n            # v2=2, v3=1.\n            # k=3: angle (1,2,3). Arc 1-3. Edges (1,2), (2,3).\n            # The number of edges in the arc between 1 and 3, not passing through 2.\n            # This is 1 edge (3-1). No.\n            # The angle at vertex 2 is formed by sides (2,1) and (2,3).\n            # The arc subtended by angle (1,2,3) is the arc from 1 to 3 that does not pass through 2.\n            # In a square (1,2,3,4):\n            # Angle (1,2,3) is 90 degrees.\n            # Formula: (k-2) * (180/n)\n            # For k=3: (3-2) * (180/4) = 1 * 45 = 45. This is wrong.\n            # Angle (1,2,3) in a square is 90.\n            # Angle (1,2,4) is 45.\n\n            # Let's use the correct formula for inscribed angle.\n            # An inscribed angle subtends an arc. The measure of the inscribed angle is half the measure of the central angle subtended by the same arc.\n            # The central angle subtended by one side is 360/n.\n            # The central angle subtended by 'm' sides is m * (360/n).\n            # The inscribed angle subtended by 'm' sides is m * (360/n) / 2 = m * (180/n).\n            # Here, 'm' is the number of edges between v1 and v3 (not passing through v2).\n            # Let v2 be vertex 2.\n            # Let v3 be vertex 1.\n            # Let v1 be vertex k.\n            # The number of edges between 1 and k (clockwise) is k-1.\n            # The number of edges between 1 and k (counter-clockwise) is n - (k-1).\n            # Since v2 is 2, and k > 2, the arc from 1 to k (clockwise) does not contain 2.\n            # So the number of edges 'm' is k-1.\n            # The angle is (k-1) * (180/n).\n            # k ranges from 3 to n.\n            # So m ranges from 2 to n-1.\n            # This means the possible angles are 2*(180/n), 3*(180/n), ..., (n-1)*(180/n).\n            # This is not correct. The smallest angle is 1*(180/n).\n            # The smallest angle is formed by (1,2,4) in a square (n=4). m=1. (4-2=2 edges)\n            # Angle (1,2,4) is 45 degrees.\n            # Here, v2=2, v3=1, v1=4.\n            # The number of edges between v3=1 and v1=4, not passing through v2=2.\n            # This means the arc (1,4). The number of edges is 1 (edge 1-4). No.\n            # It's the number of vertices between 1 and 4, which is 2 (vertices 2,3). No.\n            # It's the number of edges on the arc (1,4) which is 3 edges (1-2, 2-3, 3-4).\n            # If v2 is 2, and v3 is 1, and v1 is 4.\n            # The arc is from 1 to 4.\n            # The edges are (1,2), (2,3), (3,4).\n            # The angle is formed by lines (2,1) and (2,4).\n            # The arc is from 1 to 4. The number of edges in this arc is (4-1) = 3.\n            # This angle is (n-2) * 180 / n.\n            # The sum of internal angles of an n-gon is (n-2)*180.\n            # Each internal angle is (n-2)*180/n.\n            # This is the angle when v1, v2, v3 are consecutive.\n            # Example n=3. v1=1, v2=2, v3=3. Angle (1,2,3) = (3-2)*180/3 = 60.\n            # Example n=4. v1=1, v2=2, v3=3. Angle (1,2,3) = (4-2)*180/4 = 90.\n            # This is the largest possible angle.\n            # So this is when m = n-2.\n            # What about the smallest?\n            # Smallest angle is when v1, v2, v3 are \"far apart\".\n            # The smallest angle is formed by picking v2, and then v3 adjacent to v2, and v1 as far as possible from v3 (but not adjacent to v2).\n            # For n=4, v2=2, v3=1, v1=4. Angle (1,2,4). This is 45.\n            # Here m=1.\n            # The number of edges between v1 and v3 is m.\n            # m can range from 1 to n-2.\n            # So the angle is m * (180/n).\n            # For n=4: m=1,2.\n            # m=1: 1 * (180/4) = 45.\n            # m=2: 2 * (180/4) = 90.\n            # This seems correct.\n\n            # So, we iterate m from 1 to n-2.\n            # The vertex v2 is fixed at 2.\n            # The vertex v3 is fixed at 1.\n            # The vertex v1 is 2 + m.\n            # This means v1 = 3, 4, ..., n.\n            # If m=1, v1=3. Angle (1,2,3). This is (n-2)*180/n. This is the largest angle.\n            # If m=n-2, v1=2+(n-2) = n. Angle (1,2,n). This is the smallest angle (180/n).\n            # So the mapping is:\n            # m=1 -> angle (1,2,3) -> (n-2)*180/n.\n            # m=2 -> angle (1,2,4) -> (n-3)*180/n.\n            # ...\n            # m=k -> angle (1,2,k+2) -> (n-(k+1))*180/n.\n            # This is complicated.\n\n            # Let's use the simplest possible setup:\n            # v2 = 2\n            # v3 = 1\n            # v1 = k (where k is the third vertex, 3 <= k <= n)\n            # The angle formed by (1, 2, k) is the angle at vertex 2.\n            # The arc subtended by this angle is the arc from 1 to k that does not pass through 2.\n            # The number of edges in this arc is (k-1) - 1 = k-2.\n            # Example n=4. v2=2, v3=1.\n            # k=3: v1=3. Angle (1,2,3). Number of edges = 3-2 = 1. Angle = 1 * (180/4) = 45.\n            # k=4: v1=4. Angle (1,2,4). Number of edges = 4-2 = 2. Angle = 2 * (180/4) = 90.\n            # This is still not matching example.\n            # In square, (1,2,3) is 90 degrees. My formula gives 45.\n            # (1,2,4) is 45 degrees. My formula gives 90.\n            # It seems my formula gives the number of segments between 1 and k, but it's the wrong direction.\n\n            # Let's re-evaluate the angle formula.\n            # The angle at vertex v2, formed by sides v2-v1 and v2-v3.\n            # The number of vertices between v1 and v3 (exclusive, along the shorter arc) is 'x'.\n            # The angle is (x+1) * (180/n).\n            # No, it's (x) * (180/n).\n            # Or it's (number of sides in the arc) * (180/n).\n            # The number of sides in the arc is simply the distance between v1 and v3 along the perimeter, not passing through v2.\n            # Let v2 be vertex 2.\n            # Let v3 be vertex 1.\n            # Let v1 be vertex k.\n            # Vertices are 1, 2, 3, ..., n.\n            # We want angle (1, 2, k).\n            # The arc is from 1 to k, not passing through 2.\n            # If k > 2, then the arc is 1 -> n -> (n-1) -> ... -> k.\n            # The number of edges is (n - (k-1)) + 1. No.\n            # It's n - (k-1) edges from k to 1 (counter-clockwise).\n            # Example n=4. v2=2, v3=1.\n            # k=3: v1=3. Angle (1,2,3). Arc 1-4-3. Edges (1,4), (4,3). 2 edges. Angle = 2 * (180/4) = 90. Correct for square.\n            # k=4: v1=4. Angle (1,2,4). Arc 1-4. Edges (1,4). 1 edge. Angle = 1 * (180/4) = 45. Correct for square.\n\n            # So, the number of edges 'm' in the arc from v3 to v1 (clockwise, not passing through v2)\n            # If v3=1, v2=2, v1=k (where k is 3 to n).\n            # The vertices are 1, 2, ..., n.\n            # The arc from 1 to k (clockwise) is 1-2-3-...-k. This arc contains v2.\n            # So we must take the other arc: 1-n-(n-1)-...-k.\n            # The number of edges in this arc is (n - (k-1)).\n            # This is the distance between 1 and k along the perimeter in the \"long\" direction.\n            # The number of edges from 1 to k (clockwise) is k-1.\n            # The number of edges from k to 1 (clockwise) is n-(k-1).\n            # So the number of edges in the arc from 1 to k (not passing through 2) is n - (k-1).\n            # This is the number of edges 'm'.\n            # So m = n - (k-1).\n            # k ranges from 3 to n.\n            # When k=3, m = n - (3-1) = n-2. Angle = (n-2) * (180/n). This is the largest angle (internal angle).\n            # When k=n, m = n - (n-1) = 1. Angle = 1 * (180/n). This is the smallest angle.\n            # This seems correct now!\n\n            # So, we iterate k from 3 to n.\n            # For each k, calculate m = n - (k-1).\n            # The angle is m * (180/n).\n            # This covers all possible distinct angles.\n\n            # We need to find k such that |(n-(k-1)) * (180/n) - a| is minimized.\n            # Let's re-index for simplicity.\n            # Let the number of edges in the arc be `num_edges`.\n            # `num_edges` can range from 1 to n-2.\n            # Angle = `num_edges` * (180 / n).\n            # We want to find `num_edges` such that `abs(num_edges * (180 / n) - a)` is minimized.\n            # Let `target_num_edges = a / (180 / n) = a * n / 180`.\n            # We need to find an integer `num_edges` (from 1 to n-2) closest to `target_num_edges`.\n            # We can check `floor(target_num_edges)` and `ceil(target_num_edges)`.\n\n            # Calculate `target_num_edges_float = a * n / 180.0`\n            # Candidate `num_edges_1 = floor(target_num_edges_float)`\n            # Candidate `num_edges_2 = ceil(target_num_edges_float)`\n\n            # Ensure `num_edges_1` and `num_edges_2` are within [1, n-2].\n            # If `num_edges_1 < 1`, set it to 1.\n            # If `num_edges_1 > n-2`, skip it (or set to n-2 if `num_edges_2` is also out of bounds).\n            # If `num_edges_2 < 1`, skip it.\n            # If `num_edges_2 > n-2`, set it to n-2.\n\n            # We will iterate through possible `num_edges` directly.\n            # Iterate `m` from 1 to `n-2`.\n            # `m` is the number of edges in the arc.\n            # v2 = 2, v3 = 1.\n            # v1 = k.\n            # `m = n - (k-1)`\n            # So `k-1 = n-m`\n            # `k = n-m+1`.\n            # Since `m` goes from 1 to `n-2`:\n            # If `m=1`, `k = n-1+1 = n`. (Angle = 1*(180/n))\n            # If `m=n-2`, `k = n-(n-2)+1 = 2+1 = 3`. (Angle = (n-2)*(180/n))\n            # This mapping is correct.\n\n            # So we fix v2 = 2, v3 = 1.\n            # We iterate `m` from 1 to `n-2`.\n            # For each `m`, the angle is `current_angle = m * (180 / n)`.\n            # The third vertex `v1` will be `n - m + 1`.\n\n    min_diff = float('inf')\n    best_v1, best_v2, best_v3 = -1, -1, -1\n\n    v2 = 2 # Fixed vertex of the angle\n    v3 = 1 # Fixed one endpoint of the angle\n\n    for m in range(1, n - 1): # m is the number of edges in the arc between v1 and v3 (not passing through v2)\n        # m ranges from 1 to n-2.\n        # If m = 1, angle is 1 * (180/n). This is the smallest angle.\n        # If m = n-2, angle is (n-2) * (180/n). This is the largest angle (internal angle).\n        current_angle = m * (180 / n)\n        diff = abs(current_angle - a)\n\n        if diff < min_diff:\n            min_diff = diff\n            # Calculate v1 based on m, v2, v3\n            # v3 = 1, v2 = 2.\n            # The arc from v3 to v1 (clockwise, not passing through v2) has m edges.\n            # This means v1 is (v3 - m) mod n.\n            # If v3=1, then v1 = (1 - m - 1 + n) % n + 1. (Adjust for 1-indexing and negative results)\n            # More simply, v1 = n - m + 1.\n            # Example n=4. v3=1, v2=2.\n            # m=1: v1 = 4-1+1 = 4. Angle (4,2,1). Value 1*(180/4) = 45.\n            # m=2: v1 = 4-2+1 = 3. Angle (3,2,1). Value 2*(180/4) = 90.\n            # This mapping works.\n\n            best_v1 = n - m + 1\n            best_v2 = v2\n            best_v3 = v3\n        elif diff == min_diff:\n            # If multiple optimal solutions, any is fine. Keep the first one found.\n            pass\n\n    print(best_v3, best_v2, best_v1)\n\nsolve()\n\n```",
    "ground_truth": "N/A",
    "extracted_answer": "def solve():\n    n, a = map(int, input().split())\n\n    min_diff = float('inf')\n    best_v1, best_v2, best_v3 = -1, -1, -1\n\n    # Fix v2 as vertex 2\n    v2 = 2\n\n    # Iterate through possible v1 (from 3 to n)\n    # v1 will be the first point of the angle, v2 the vertex, v3 the third point\n    # We can fix v2 = 2 and v3 = 1 to simplify.\n    # The angle will be formed by vertices v3, v2, v1\n    # v2 is the vertex of the angle.\n    # The vertices are 1-indexed.\n    # Angle is formed by (v3, v2, v1)\n    # We fix v2 = 2.\n    # We fix v3 = 1.\n    # Then v1 can be any vertex from 3 to n.\n    # The angle formed by vertices (1, 2, k) where k is the third vertex.\n    # The angle is (k-1) * (180 / n) degrees.\n    # This is because the central angle subtended by one side is 360/n.\n    # The inscribed angle subtended by an arc of k sides is (k * 360/n) / 2 = k * 180/n.\n    # Here, the arc is from vertex 1 to vertex k, with vertex 2 being the vertex of the angle.\n    # The number of sides between vertex 1 and vertex k (not passing through vertex 2) is k-1.\n    # So the angle is (k-1) * (180 / n).\n\n    # The angle is formed by vertices v3, v2, v1.\n    # Let v2 be vertex 2.\n    # Let v3 be vertex 1.\n    # Let v1 be vertex k, where k ranges from 3 to n.\n    # The number of edges between vertex 1 and vertex k (clockwise, not passing through 2) is k-1.\n    # The inscribed angle subtended by an arc of (k-1) edges is (k-1) * (180 / n).\n    # This formula gives all possible distinct angles in a regular n-gon.\n    # The possible values for (k-1) range from 2 to n-1.\n    # So the possible number of edges are m = 1, 2, ..., n-2.\n    # The angles are m * (180 / n).\n\n    for m in range(1, n - 1): # m is the number of edges between v1 and v3, with v2 as the vertex\n        current_angle = m * (180 / n)\n        diff = abs(current_angle - a)\n\n        if diff < min_diff:\n            min_diff = diff\n            # v2 is the vertex of the angle, so it's fixed at 2.\n            # v3 is one endpoint, fixed at 1.\n            # v1 is the other endpoint.\n            # If there are m edges between v1 and v3 (not passing through v2),\n            # and v3 is 1, v2 is 2, then v1 must be 1 + m + 1 = m + 2.\n            # (Assuming vertices are 1-indexed and we go clockwise)\n            # v3 = 1\n            # v2 = 2\n            # v1 = 2 + m (this is 1-indexed, meaning m steps from 2)\n            # The vertices are 1, 2, ..., n.\n            # Let v2 be 2.\n            # Let v3 be 1.\n            # Let v1 be 2 + m.\n            # The number of vertices between 1 and (2+m) (exclusive, clockwise) is m.\n            # The number of edges is m+1.\n            # No, the number of edges between v1 and v3 is m.\n            # If v3 = 1, v2 = 2, then v1 = 2 + m.\n            # The angle is formed by (v3, v2, v1).\n            # The vertices are 1, 2, ..., n.\n            # Let v2 be vertex 2.\n            # Let v3 be vertex 1.\n            # Let v1 be vertex (2 + m).\n            # This ensures v1, v2, v3 are distinct.\n            # v1 must be <= n. So 2 + m <= n => m <= n - 2.\n            # So m ranges from 1 to n-2.\n            best_v1 = 2 + m\n            best_v2 = 2\n            best_v3 = 1\n            \n            # This ensures v1, v2, v3 are distinct and valid.\n            # v3 = 1\n            # v2 = 2\n            # v1 = 3, 4, ..., n.\n            # The number of edges between 1 and v1 (clockwise, not through 2) is v1 - 1.\n            # So the angle is (v1 - 1 - 1) * (180 / n) if v2 is 2 and v3 is 1.\n            # No, this is not correct.\n            # The angle formed by (v_i, v_j, v_k) where v_j is the vertex.\n            # The angle is (number of edges between v_i and v_k, not passing through v_j) * (180 / n).\n            # Let's fix v2 = 2.\n            # Let v3 = 1.\n            # Let v1 = k.\n            # k must be from 3 to n.\n            # The number of edges between 1 and k (clockwise) is k-1.\n            # The number of edges between 1 and k (counter-clockwise) is n - (k-1).\n            # The arc that does NOT contain vertex 2 is the one we care about.\n            # Since v2 is 2, and v3 is 1, and v1 is k (k > 2), the arc from 1 to k does not contain 2.\n            # The number of edges in this arc is k-1.\n            # So the angle is (k-1) * (180 / n).\n            # Here k is the vertex index, not the number of edges.\n            # So let's use k for the vertex index.\n            # k ranges from 3 to n.\n            # The number of edges is k-1. No, it's k-1-1 = k-2.\n            # The number of edges between vertex 1 and vertex k, when vertex 2 is the angle vertex, is (k-1) - 1 = k-2.\n            # Example: n=4.\n            # v2=2, v3=1.\n            # k=3: angle (1,2,3). Arc 1-3. Edges (1,2), (2,3).\n            # The number of edges in the arc between 1 and 3, not passing through 2.\n            # This is 1 edge (3-1). No.\n            # The angle at vertex 2 is formed by sides (2,1) and (2,3).\n            # The arc subtended by angle (1,2,3) is the arc from 1 to 3 that does not pass through 2.\n            # In a square (1,2,3,4):\n            # Angle (1,2,3) is 90 degrees.\n            # Formula: (k-2) * (180/n)\n            # For k=3: (3-2) * (180/4) = 1 * 45 = 45. This is wrong.\n            # Angle (1,2,3) in a square is 90.\n            # Angle (1,2,4) is 45.\n\n            # Let's use the correct formula for inscribed angle.\n            # An inscribed angle subtends an arc. The measure of the inscribed angle is half the measure of the central angle subtended by the same arc.\n            # The central angle subtended by one side is 360/n.\n            # The central angle subtended by 'm' sides is m * (360/n).\n            # The inscribed angle subtended by 'm' sides is m * (360/n) / 2 = m * (180/n).\n            # Here, 'm' is the number of edges between v1 and v3 (not passing through v2).\n            # Let v2 be vertex 2.\n            # Let v3 be vertex 1.\n            # Let v1 be vertex k.\n            # The number of edges between 1 and k (clockwise) is k-1.\n            # The number of edges between 1 and k (counter-clockwise) is n - (k-1).\n            # Since v2 is 2, and k > 2, the arc from 1 to k (clockwise) does not contain 2.\n            # So the number of edges 'm' is k-1.\n            # The angle is (k-1) * (180/n).\n            # k ranges from 3 to n.\n            # So m ranges from 2 to n-1.\n            # This means the possible angles are 2*(180/n), 3*(180/n), ..., (n-1)*(180/n).\n            # This is not correct. The smallest angle is 1*(180/n).\n            # The smallest angle is formed by (1,2,4) in a square (n=4). m=1. (4-2=2 edges)\n            # Angle (1,2,4) is 45 degrees.\n            # Here, v2=2, v3=1, v1=4.\n            # The number of edges between v3=1 and v1=4, not passing through v2=2.\n            # This means the arc (1,4). The number of edges is 1 (edge 1-4). No.\n            # It's the number of vertices between 1 and 4, which is 2 (vertices 2,3). No.\n            # It's the number of edges on the arc (1,4) which is 3 edges (1-2, 2-3, 3-4).\n            # If v2 is 2, and v3 is 1, and v1 is 4.\n            # The arc is from 1 to 4.\n            # The edges are (1,2), (2,3), (3,4).\n            # The angle is formed by lines (2,1) and (2,4).\n            # The arc is from 1 to 4. The number of edges in this arc is (4-1) = 3.\n            # This angle is (n-2) * 180 / n.\n            # The sum of internal angles of an n-gon is (n-2)*180.\n            # Each internal angle is (n-2)*180/n.\n            # This is the angle when v1, v2, v3 are consecutive.\n            # Example n=3. v1=1, v2=2, v3=3. Angle (1,2,3) = (3-2)*180/3 = 60.\n            # Example n=4. v1=1, v2=2, v3=3. Angle (1,2,3) = (4-2)*180/4 = 90.\n            # This is the largest possible angle.\n            # So this is when m = n-2.\n            # What about the smallest?\n            # Smallest angle is when v1, v2, v3 are \"far apart\".\n            # The smallest angle is formed by picking v2, and then v3 adjacent to v2, and v1 as far as possible from v3 (but not adjacent to v2).\n            # For n=4, v2=2, v3=1, v1=4. Angle (1,2,4). This is 45.\n            # Here m=1.\n            # The number of edges between v1 and v3 is m.\n            # m can range from 1 to n-2.\n            # So the angle is m * (180/n).\n            # For n=4: m=1,2.\n            # m=1: 1 * (180/4) = 45.\n            # m=2: 2 * (180/4) = 90.\n            # This seems correct.\n\n            # So, we iterate m from 1 to n-2.\n            # The vertex v2 is fixed at 2.\n            # The vertex v3 is fixed at 1.\n            # The vertex v1 is 2 + m.\n            # This means v1 = 3, 4, ..., n.\n            # If m=1, v1=3. Angle (1,2,3). This is (n-2)*180/n. This is the largest angle.\n            # If m=n-2, v1=2+(n-2) = n. Angle (1,2,n). This is the smallest angle (180/n).\n            # So the mapping is:\n            # m=1 -> angle (1,2,3) -> (n-2)*180/n.\n            # m=2 -> angle (1,2,4) -> (n-3)*180/n.\n            # ...\n            # m=k -> angle (1,2,k+2) -> (n-(k+1))*180/n.\n            # This is complicated.\n\n            # Let's use the simplest possible setup:\n            # v2 = 2\n            # v3 = 1\n            # v1 = k (where k is the third vertex, 3 <= k <= n)\n            # The angle formed by (1, 2, k) is the angle at vertex 2.\n            # The arc subtended by this angle is the arc from 1 to k that does not pass through 2.\n            # The number of edges in this arc is (k-1) - 1 = k-2.\n            # Example n=4. v2=2, v3=1.\n            # k=3: v1=3. Angle (1,2,3). Number of edges = 3-2 = 1. Angle = 1 * (180/4) = 45.\n            # k=4: v1=4. Angle (1,2,4). Number of edges = 4-2 = 2. Angle = 2 * (180/4) = 90.\n            # This is still not matching example.\n            # In square, (1,2,3) is 90 degrees. My formula gives 45.\n            # (1,2,4) is 45 degrees. My formula gives 90.\n            # It seems my formula gives the number of segments between 1 and k, but it's the wrong direction.\n\n            # Let's re-evaluate the angle formula.\n            # The angle at vertex v2, formed by sides v2-v1 and v2-v3.\n            # The number of vertices between v1 and v3 (exclusive, along the shorter arc) is 'x'.\n            # The angle is (x+1) * (180/n).\n            # No, it's (x) * (180/n).\n            # Or it's (number of sides in the arc) * (180/n).\n            # The number of sides in the arc is simply the distance between v1 and v3 along the perimeter, not passing through v2.\n            # Let v2 be vertex 2.\n            # Let v3 be vertex 1.\n            # Let v1 be vertex k.\n            # Vertices are 1, 2, 3, ..., n.\n            # We want angle (1, 2, k).\n            # The arc is from 1 to k, not passing through 2.\n            # If k > 2, then the arc is 1 -> n -> (n-1) -> ... -> k.\n            # The number of edges is (n - (k-1)) + 1. No.\n            # It's n - (k-1) edges from k to 1 (counter-clockwise).\n            # Example n=4. v2=2, v3=1.\n            # k=3: v1=3. Angle (1,2,3). Arc 1-4-3. Edges (1,4), (4,3). 2 edges. Angle = 2 * (180/4) = 90. Correct for square.\n            # k=4: v1=4. Angle (1,2,4). Arc 1-4. Edges (1,4). 1 edge. Angle = 1 * (180/4) = 45. Correct for square.\n\n            # So, the number of edges 'm' in the arc from v3 to v1 (clockwise, not passing through v2)\n            # If v3=1, v2=2, v1=k (where k is 3 to n).\n            # The vertices are 1, 2, ..., n.\n            # The arc from 1 to k (clockwise) is 1-2-3-...-k. This arc contains v2.\n            # So we must take the other arc: 1-n-(n-1)-...-k.\n            # The number of edges in this arc is (n - (k-1)).\n            # This is the distance between 1 and k along the perimeter in the \"long\" direction.\n            # The number of edges from 1 to k (clockwise) is k-1.\n            # The number of edges from k to 1 (clockwise) is n-(k-1).\n            # So the number of edges in the arc from 1 to k (not passing through 2) is n - (k-1).\n            # This is the number of edges 'm'.\n            # So m = n - (k-1).\n            # k ranges from 3 to n.\n            # When k=3, m = n - (3-1) = n-2. Angle = (n-2) * (180/n). This is the largest angle (internal angle).\n            # When k=n, m = n - (n-1) = 1. Angle = 1 * (180/n). This is the smallest angle.\n            # This seems correct now!\n\n            # So, we iterate k from 3 to n.\n            # For each k, calculate m = n - (k-1).\n            # The angle is m * (180/n).\n            # This covers all possible distinct angles.\n\n            # We need to find k such that |(n-(k-1)) * (180/n) - a| is minimized.\n            # Let's re-index for simplicity.\n            # Let the number of edges in the arc be `num_edges`.\n            # `num_edges` can range from 1 to n-2.\n            # Angle = `num_edges` * (180 / n).\n            # We want to find `num_edges` such that `abs(num_edges * (180 / n) - a)` is minimized.\n            # Let `target_num_edges = a / (180 / n) = a * n / 180`.\n            # We need to find an integer `num_edges` (from 1 to n-2) closest to `target_num_edges`.\n            # We can check `floor(target_num_edges)` and `ceil(target_num_edges)`.\n\n            # Calculate `target_num_edges_float = a * n / 180.0`\n            # Candidate `num_edges_1 = floor(target_num_edges_float)`\n            # Candidate `num_edges_2 = ceil(target_num_edges_float)`\n\n            # Ensure `num_edges_1` and `num_edges_2` are within [1, n-2].\n            # If `num_edges_1 < 1`, set it to 1.\n            # If `num_edges_1 > n-2`, skip it (or set to n-2 if `num_edges_2` is also out of bounds).\n            # If `num_edges_2 < 1`, skip it.\n            # If `num_edges_2 > n-2`, set it to n-2.\n\n            # We will iterate through possible `num_edges` directly.\n            # Iterate `m` from 1 to `n-2`.\n            # `m` is the number of edges in the arc.\n            # v2 = 2, v3 = 1.\n            # v1 = k.\n            # `m = n - (k-1)`\n            # So `k-1 = n-m`\n            # `k = n-m+1`.\n            # Since `m` goes from 1 to `n-2`:\n            # If `m=1`, `k = n-1+1 = n`. (Angle = 1*(180/n))\n            # If `m=n-2`, `k = n-(n-2)+1 = 2+1 = 3`. (Angle = (n-2)*(180/n))\n            # This mapping is correct.\n\n            # So we fix v2 = 2, v3 = 1.\n            # We iterate `m` from 1 to `n-2`.\n            # For each `m`, the angle is `current_angle = m * (180 / n)`.\n            # The third vertex `v1` will be `n - m + 1`.\n\n    min_diff = float('inf')\n    best_v1, best_v2, best_v3 = -1, -1, -1\n\n    v2 = 2 # Fixed vertex of the angle\n    v3 = 1 # Fixed one endpoint of the angle\n\n    for m in range(1, n - 1): # m is the number of edges in the arc between v1 and v3 (not passing through v2)\n        # m ranges from 1 to n-2.\n        # If m = 1, angle is 1 * (180/n). This is the smallest angle.\n        # If m = n-2, angle is (n-2) * (180/n). This is the largest angle (internal angle).\n        current_angle = m * (180 / n)\n        diff = abs(current_angle - a)\n\n        if diff < min_diff:\n            min_diff = diff\n            # Calculate v1 based on m, v2, v3\n            # v3 = 1, v2 = 2.\n            # The arc from v3 to v1 (clockwise, not passing through v2) has m edges.\n            # This means v1 is (v3 - m) mod n.\n            # If v3=1, then v1 = (1 - m - 1 + n) % n + 1. (Adjust for 1-indexing and negative results)\n            # More simply, v1 = n - m + 1.\n            # Example n=4. v3=1, v2=2.\n            # m=1: v1 = 4-1+1 = 4. Angle (4,2,1). Value 1*(180/4) = 45.\n            # m=2: v1 = 4-2+1 = 3. Angle (3,2,1). Value 2*(180/4) = 90.\n            # This mapping works.\n\n            best_v1 = n - m + 1\n            best_v2 = v2\n            best_v3 = v3\n        elif diff == min_diff:\n            # If multiple optimal solutions, any is fine. Keep the first one found.\n            pass\n\n    print(best_v3, best_v2, best_v1)\n\nsolve()",
    "score": 0,
    "metadata": {
        "prompt_token_count": 738,
        "completion_token_count": 5662,
        "thoughts_token_count": 0
    }
}