{
    "start": 1758290647.8085337,
    "end": 1758290663.1938393,
    "start-formatted": "2025-09-19 23:04 KST",
    "end-formatted": "2025-09-19 23:04 KST",
    "gpu": 2,
    "pid": 22,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Marks\n\nVasya, or Mr. Vasily Petrov is a dean of a department in a local university. After the winter exams he got his hands on a group's gradebook.Overall the group has n students. They received marks for m subjects. Each student got a mark from 1 to 9 (inclusive) for each subject.Let's consider a student the best at some subject, if there is no student who got a higher mark for this subject. Let's consider a student successful, if there exists a subject he is the best at.Your task is to find the number of successful students in the group.\n\n## Input\nThe first input line contains two integers n and m (1 ≤ n, m ≤ 100) — the number of students and the number of subjects, correspondingly. Next n lines each containing m characters describe the gradebook. Each character in the gradebook is a number from 1 to 9. Note that the marks in a rows are not sepatated by spaces.\n\n## Output\nPrint the single number — the number of successful students in the given group.\n\n## Example\n### Input\n['3 3\\n223\\n232\\n112', '3 5\\n91728\\n11828\\n11111']\n\n### Output\n['2', '3']\n\n## Note\nIn the first sample test the student number 1 is the best at subjects 1 and 3, student 2 is the best at subjects 1 and 2, but student 3 isn't the best at any subject.In the second sample test each student is the best at at least one subject.\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is a hard question."
        }
    ],
    "thought": "**Implementing input reading**\n\nI'm working on how to read input correctly using `sys.stdin.read().split()`. I'll handle cases with extra whitespaces or trailing newlines. The first line has two integers, then followed by multiple lines. I'll collect those tokens by using `.split()` on each row.\n\nI need to ensure I'm careful while managing string tokens, as they'll include entire lines. After that, I'll compute a `col_max` for each column based on character comparisons. It looks like I'm on the right track with thinking!",
    "response": "import sys\n\ndata = sys.stdin.read().split()\nif not data:\n    sys.exit(0)\nit = iter(data)\nn = int(next(it))\nm = int(next(it))\nrows = [next(it).strip() for _ in range(n)]\ncol_max = [max(rows[i][j] for i in range(n)) for j in range(m)]\nres = 0\nfor i in range(n):\n    for j in range(m):\n        if rows[i][j] == col_max[j]:\n            res += 1\n            break\nprint(res)",
    "ground_truth": "N/A",
    "extracted_answer": "import sys\n\ndata = sys.stdin.read().split()\nif not data:\n    sys.exit(0)\nit = iter(data)\nn = int(next(it))\nm = int(next(it))\nrows = [next(it).strip() for _ in range(n)]\ncol_max = [max(rows[i][j] for i in range(n)) for j in range(m)]\nres = 0\nfor i in range(n):\n    for j in range(m):\n        if rows[i][j] == col_max[j]:\n            res += 1\n            break\nprint(res)",
    "score": 1,
    "metadata": {
        "prompt_token_count": 427,
        "completion_token_count": 698,
        "thoughts_token_count": 576
    }
}