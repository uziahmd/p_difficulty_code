{
    "start": 1758292079.1446674,
    "end": 1758292126.2277145,
    "start-formatted": "2025-09-19 23:27 KST",
    "end-formatted": "2025-09-19 23:28 KST",
    "gpu": 2,
    "pid": 47,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Neko does Maths\n\nNeko loves divisors. During the latest number theory lesson, he got an interesting exercise from his math teacher.Neko has two integers $$$a$$$ and $$$b$$$. His goal is to find a non-negative integer $$$k$$$ such that the least common multiple of $$$a+k$$$ and $$$b+k$$$ is the smallest possible. If there are multiple optimal integers $$$k$$$, he needs to choose the smallest one.Given his mathematical talent, Neko had no trouble getting Wrong Answer on this problem. Can you help him solve it?\n\n## Input\nThe only line contains two integers $$$a$$$ and $$$b$$$ ($$$1 \\le a, b \\le 10^9$$$).\n\n## Output\nPrint the smallest non-negative integer $$$k$$$ ($$$k \\ge 0$$$) such that the lowest common multiple of $$$a+k$$$ and $$$b+k$$$ is the smallest possible.If there are many possible integers $$$k$$$ giving the same value of the least common multiple, print the smallest one.\n\n## Example\n### Input\n['6 10', '21 31', '5 10']\n\n### Output\n['2', '9', '0']\n\n## Note\nIn the first test, one should choose $$$k = 2$$$, as the least common multiple of $$$6 + 2$$$ and $$$10 + 2$$$ is $$$24$$$, which is the smallest least common multiple possible.\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is a very easy question."
        }
    ],
    "thought": "",
    "response": "```python\nimport math\n\ndef gcd(a, b):\n    \"\"\"Compute the greatest common divisor of a and b\"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"Compute the lowest common multiple of a and b\"\"\"\n    return a * b // gcd(a, b)\n\ndef solve():\n    \"\"\"Solve the problem\"\"\"\n    a, b = map(int, input().split())\n    k = 0\n    min_lcm = float('inf')\n    \n    while True:\n        current_lcm = lcm(a + k, b + k)\n        if current_lcm == min_lcm:\n            break\n        elif current_lcm < min_lcm:\n            min_lcm = current_lcm\n        k += 1\n    \n    print(k)\n\nif __name__ == \"__main__\":\n    # Test cases\n    test_cases = ['6 10', '21 31', '5 10']\n    \n    for test_case in test_cases:\n        input_str = test_case\n        input_str = input_str.replace(\" \", \"\\n\")\n        input_str = \"1\\n\" + input_str\n        input_list = [line.strip() for line in input_str.split(\"\\n\")]\n        \n        # Simulate input from standard input (stdin)\n        for line in input_list:\n            input(line)\n        \n        # Solve the problem\n        solve()\n        \n        # Reset input and output streams\n        import sys\n        sys.stdin = open(\"/dev/stdin\", \"r\")\n        sys.stdout = open(\"/dev/stdout\", \"w\")\n```\n\nThis script defines a function `solve()` that reads two integers from standard input, finds the smallest non-negative integer `k` such that the least common multiple of `a+k` and `b+k` is the smallest possible, and prints the result to standard output. The script also includes a helper function `gcd(a, b)` to compute the greatest common divisor of two integers and another helper function `lcm(a, b)` to compute the lowest common multiple of two integers.\n\nTo run this script, save it to a file (e.g., `solution.py`), then execute it using Python:\n\n```bash\npython solution.py\n```\n\nYou can replace the `test_cases` list with your own input data or use the provided test cases.",
    "ground_truth": "N/A",
    "extracted_answer": "bash\npython solution.py",
    "score": -1,
    "metadata": {
        "prompt_token_count": 422,
        "completion_token_count": 486,
        "thoughts_token_count": 0
    }
}