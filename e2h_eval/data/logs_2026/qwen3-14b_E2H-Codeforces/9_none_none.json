{
    "start": 1757842753.8091989,
    "end": 1757842784.1537051,
    "start-formatted": "2025-09-14 18:39 KST",
    "end-formatted": "2025-09-14 18:39 KST",
    "gpu": 2,
    "pid": 9,
    "thought": "",
    "response": "```python\nimport sys\nfrom collections import defaultdict\n\ndef solve():\n    input = sys.stdin.read\n    data = input().split('\\n')\n    \n    n = int(data[0])\n    l = data[1]\n    r = data[2]\n\n    # Map to store count of each color for left and right boots\n    left_count = defaultdict(int)\n    right_count = defaultdict(int)\n\n    # Count the number of each color in left and right boots\n    for c in l:\n        if c != '?':\n            left_count[c] += 1\n    for c in r:\n        if c != '?':\n            right_count[c] += 1\n\n    # Match specific colors first\n    matched = 0\n    pairs = []\n\n    # Try to match specific colors\n    for color in left_count:\n        if color in right_count:\n            match = min(left_count[color], right_count[color])\n            matched += match\n            # We'll record the actual indices later\n            # For now, just reduce the counts\n            left_count[color] -= match\n            right_count[color] -= match\n\n    # Now handle question marks\n    # Match left '?' with right non-?\n    q_left = left_count['?']\n    for color in right_count:\n        if color != '?':\n            match = min(q_left, right_count[color])\n            matched += match\n            q_left -= match\n\n    # Match right '?' with left non-?\n    q_right = right_count['?']\n    for color in left_count:\n        if color != '?':\n            match = min(q_right, left_count[color])\n            matched += match\n            q_right -= match\n\n    # Match remaining '?' with '?'\n    matched += min(q_left, q_right)\n\n    # Now, we need to output the actual pairs\n    # We will build two lists: used_left and used_right\n    used_left = [False] * n\n    used_right = [False] * n\n\n    # First, match specific colors\n    left_color_map = defaultdict(list)\n    right_color_map = defaultdict(list)\n\n    for i in range(n):\n        if l[i] != '?':\n            left_color_map[l[i]].append(i)\n        if r[i] != '?':\n            right_color_map[r[i]].append(i)\n\n    # Match specific colors\n    for color in left_color_map:\n        if color in right_color_map:\n            left_indices = left_color_map[color]\n            right_indices = right_color_map[color]\n            for i in range(min(len(left_indices), len(right_indices))):\n                a = left_indices[i]\n                b = right_indices[i]\n                if not used_left[a] and not used_right[b]:\n                    pairs.append((a + 1, b + 1))\n                    used_left[a] = True\n                    used_right[b] = True\n\n    # Match left '?' with right non-?\n    left_q = []\n    for i in range(n):\n        if l[i] == '?':\n            left_q.append(i)\n\n    for color in right_color_map:\n        if color != '?':\n            right_indices = right_color_map[color]\n            for idx in right_indices:\n                if not used_right[idx]:\n                    for i in range(len(left_q)):\n                        if not used_left[left_q[i]]:\n                            pairs.append((left_q[i] + 1, idx + 1))\n                            used_left[left_q[i]] = True\n                            used_right[idx] = True\n                            break\n\n    # Match right '?' with left non-?\n    right_q = []\n    for i in range(n):\n        if r[i] == '?':\n            right_q.append(i)\n\n    for color in left_color_map:\n        if color != '?':\n            left_indices = left_color_map[color]\n            for idx in left_indices:\n                if not used_left[idx]:\n                    for i in range(len(right_q)):\n                        if not used_right[right_q[i]]:\n                            pairs.append((idx + 1, right_q[i] + 1))\n                            used_left[idx] = True\n                            used_right[right_q[i]] = True\n                            break\n\n    # Match remaining '?' with '?'\n    left_q_remaining = [i for i in range(n) if l[i] == '?' and not used_left[i]]\n    right_q_remaining = [i for i in range(n) if r[i] == '?' and not used_right[i]]\n\n    for i in range(min(len(left_q_remaining), len(right_q_remaining))):\n        a = left_q_remaining[i]\n        b = right_q_remaining[i]\n        pairs.append((a + 1, b + 1))\n\n    print(len(pairs))\n    for pair in pairs:\n        print(pair[0], pair[1])\n```",
    "ground_truth": "N/A",
    "extracted_answer": "import sys\nfrom collections import defaultdict\n\ndef solve():\n    input = sys.stdin.read\n    data = input().split('\\n')\n    \n    n = int(data[0])\n    l = data[1]\n    r = data[2]\n\n    # Map to store count of each color for left and right boots\n    left_count = defaultdict(int)\n    right_count = defaultdict(int)\n\n    # Count the number of each color in left and right boots\n    for c in l:\n        if c != '?':\n            left_count[c] += 1\n    for c in r:\n        if c != '?':\n            right_count[c] += 1\n\n    # Match specific colors first\n    matched = 0\n    pairs = []\n\n    # Try to match specific colors\n    for color in left_count:\n        if color in right_count:\n            match = min(left_count[color], right_count[color])\n            matched += match\n            # We'll record the actual indices later\n            # For now, just reduce the counts\n            left_count[color] -= match\n            right_count[color] -= match\n\n    # Now handle question marks\n    # Match left '?' with right non-?\n    q_left = left_count['?']\n    for color in right_count:\n        if color != '?':\n            match = min(q_left, right_count[color])\n            matched += match\n            q_left -= match\n\n    # Match right '?' with left non-?\n    q_right = right_count['?']\n    for color in left_count:\n        if color != '?':\n            match = min(q_right, left_count[color])\n            matched += match\n            q_right -= match\n\n    # Match remaining '?' with '?'\n    matched += min(q_left, q_right)\n\n    # Now, we need to output the actual pairs\n    # We will build two lists: used_left and used_right\n    used_left = [False] * n\n    used_right = [False] * n\n\n    # First, match specific colors\n    left_color_map = defaultdict(list)\n    right_color_map = defaultdict(list)\n\n    for i in range(n):\n        if l[i] != '?':\n            left_color_map[l[i]].append(i)\n        if r[i] != '?':\n            right_color_map[r[i]].append(i)\n\n    # Match specific colors\n    for color in left_color_map:\n        if color in right_color_map:\n            left_indices = left_color_map[color]\n            right_indices = right_color_map[color]\n            for i in range(min(len(left_indices), len(right_indices))):\n                a = left_indices[i]\n                b = right_indices[i]\n                if not used_left[a] and not used_right[b]:\n                    pairs.append((a + 1, b + 1))\n                    used_left[a] = True\n                    used_right[b] = True\n\n    # Match left '?' with right non-?\n    left_q = []\n    for i in range(n):\n        if l[i] == '?':\n            left_q.append(i)\n\n    for color in right_color_map:\n        if color != '?':\n            right_indices = right_color_map[color]\n            for idx in right_indices:\n                if not used_right[idx]:\n                    for i in range(len(left_q)):\n                        if not used_left[left_q[i]]:\n                            pairs.append((left_q[i] + 1, idx + 1))\n                            used_left[left_q[i]] = True\n                            used_right[idx] = True\n                            break\n\n    # Match right '?' with left non-?\n    right_q = []\n    for i in range(n):\n        if r[i] == '?':\n            right_q.append(i)\n\n    for color in left_color_map:\n        if color != '?':\n            left_indices = left_color_map[color]\n            for idx in left_indices:\n                if not used_left[idx]:\n                    for i in range(len(right_q)):\n                        if not used_right[right_q[i]]:\n                            pairs.append((idx + 1, right_q[i] + 1))\n                            used_left[idx] = True\n                            used_right[right_q[i]] = True\n                            break\n\n    # Match remaining '?' with '?'\n    left_q_remaining = [i for i in range(n) if l[i] == '?' and not used_left[i]]\n    right_q_remaining = [i for i in range(n) if r[i] == '?' and not used_right[i]]\n\n    for i in range(min(len(left_q_remaining), len(right_q_remaining))):\n        a = left_q_remaining[i]\n        b = right_q_remaining[i]\n        pairs.append((a + 1, b + 1))\n\n    print(len(pairs))\n    for pair in pairs:\n        print(pair[0], pair[1])",
    "score": -1,
    "metadata": {
        "prompt_token_count": 818,
        "completion_token_count": 973,
        "thoughts_token_count": 0
    }
}