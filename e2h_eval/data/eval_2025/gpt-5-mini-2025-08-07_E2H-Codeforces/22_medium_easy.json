{
    "start": 1758290629.6681945,
    "end": 1758290645.2377253,
    "start-formatted": "2025-09-19 23:03 KST",
    "end-formatted": "2025-09-19 23:04 KST",
    "gpu": 2,
    "pid": 22,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Marks\n\nVasya, or Mr. Vasily Petrov is a dean of a department in a local university. After the winter exams he got his hands on a group's gradebook.Overall the group has n students. They received marks for m subjects. Each student got a mark from 1 to 9 (inclusive) for each subject.Let's consider a student the best at some subject, if there is no student who got a higher mark for this subject. Let's consider a student successful, if there exists a subject he is the best at.Your task is to find the number of successful students in the group.\n\n## Input\nThe first input line contains two integers n and m (1 ≤ n, m ≤ 100) — the number of students and the number of subjects, correspondingly. Next n lines each containing m characters describe the gradebook. Each character in the gradebook is a number from 1 to 9. Note that the marks in a rows are not sepatated by spaces.\n\n## Output\nPrint the single number — the number of successful students in the given group.\n\n## Example\n### Input\n['3 3\\n223\\n232\\n112', '3 5\\n91728\\n11828\\n11111']\n\n### Output\n['2', '3']\n\n## Note\nIn the first sample test the student number 1 is the best at subjects 1 and 3, student 2 is the best at subjects 1 and 2, but student 3 isn't the best at any subject.In the second sample test each student is the best at at least one subject.\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is an easy question."
        }
    ],
    "thought": "**Clarifying Codeforces Problem**\n\nI'm trying to figure out if this is CF problem 43A or \"Successful Student\" 112A, but it seems like \"Successful Student\" might actually be 152A. The task involves given n students and m digits, where I need to find the max digit for each column. Any student with a mark equal to that max is considered successful, and I have to count unique successful students. I need to consider multiple test cases, as shown in the examples. I'll write a script to read all tokens properly.",
    "response": "import sys\n\ndata = sys.stdin.read().strip().split()\nif not data:\n    sys.exit(0)\nout_lines = []\ni = 0\nwhile i < len(data):\n    n = int(data[i]); m = int(data[i+1]); i += 2\n    rows = data[i:i+n]; i += n\n    max_in_col = ['0'] * m\n    for r in rows:\n        for j, ch in enumerate(r):\n            if ch > max_in_col[j]:\n                max_in_col[j] = ch\n    cnt = 0\n    for r in rows:\n        for j, ch in enumerate(r):\n            if ch == max_in_col[j]:\n                cnt += 1\n                break\n    out_lines.append(str(cnt))\nsys.stdout.write(\"\\n\".join(out_lines))",
    "ground_truth": "N/A",
    "extracted_answer": "import sys\n\ndata = sys.stdin.read().strip().split()\nif not data:\n    sys.exit(0)\nout_lines = []\ni = 0\nwhile i < len(data):\n    n = int(data[i]); m = int(data[i+1]); i += 2\n    rows = data[i:i+n]; i += n\n    max_in_col = ['0'] * m\n    for r in rows:\n        for j, ch in enumerate(r):\n            if ch > max_in_col[j]:\n                max_in_col[j] = ch\n    cnt = 0\n    for r in rows:\n        for j, ch in enumerate(r):\n            if ch == max_in_col[j]:\n                cnt += 1\n                break\n    out_lines.append(str(cnt))\nsys.stdout.write(\"\\n\".join(out_lines))",
    "score": 1,
    "metadata": {
        "prompt_token_count": 427,
        "completion_token_count": 560,
        "thoughts_token_count": 384
    }
}