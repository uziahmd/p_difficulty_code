{
    "start": 1758278347.5348482,
    "end": 1758278556.8890004,
    "start-formatted": "2025-09-19 19:39 KST",
    "end-formatted": "2025-09-19 19:42 KST",
    "gpu": 2,
    "pid": 22,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Marks\n\nVasya, or Mr. Vasily Petrov is a dean of a department in a local university. After the winter exams he got his hands on a group's gradebook.Overall the group has n students. They received marks for m subjects. Each student got a mark from 1 to 9 (inclusive) for each subject.Let's consider a student the best at some subject, if there is no student who got a higher mark for this subject. Let's consider a student successful, if there exists a subject he is the best at.Your task is to find the number of successful students in the group.\n\n## Input\nThe first input line contains two integers n and m (1 ≤ n, m ≤ 100) — the number of students and the number of subjects, correspondingly. Next n lines each containing m characters describe the gradebook. Each character in the gradebook is a number from 1 to 9. Note that the marks in a rows are not sepatated by spaces.\n\n## Output\nPrint the single number — the number of successful students in the given group.\n\n## Example\n### Input\n['3 3\\n223\\n232\\n112', '3 5\\n91728\\n11828\\n11111']\n\n### Output\n['2', '3']\n\n## Note\nIn the first sample test the student number 1 is the best at subjects 1 and 3, student 2 is the best at subjects 1 and 2, but student 3 isn't the best at any subject.In the second sample test each student is the best at at least one subject.\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments.\n\nNote that this is a moderately difficult question."
        }
    ],
    "thought": "Okay, I have to solve this problem where I need to determine the number of successful students in a group. Let's read the problem carefully.\n\nSo, each student has marks for m subjects. A student is considered successful if there's at least one subject where they are the best in that subject. Being the best means no other student has a higher mark in that subject.\n\nHmm, so for each subject, I need to find which student has the maximum mark. Then, for each student, check if they are the max in any of the subjects.\n\nWait, but how do I process each subject? For each subject across all students, find the highest mark and note which student(s) have it. Because only the students with the maximum mark in that subject can be the best for it.\n\nWait no. Because if multiple students have the same maximum in a subject, then none of them can be the best because there's another student (also) with the same maximum. So for a subject, only the students who have the unique maximum are the best for that subject.\n\nWait, right. For example, if in subject 1, student A has 5 and student B also has 5. Then neither is the best for subject 1 because there's someone else with the same maximum. So only if a student has a unique maximum in their subject, they can be considered as the best.\n\nSo the plan is:\n\n1. For each subject:\n   a. Find the maximum mark in that subject across all students.\n   b. Count how many students have that maximum mark.\n   c. If the count is exactly 1, then that student is the best for that subject.\n   d. Otherwise, no student is the best for that subject.\n\n2. For each student, check if they are the best in at least one subject. The total count of such students is the answer.\n\nSo, the steps I need to implement:\n\nFirst, process each subject. How?\n\nEach student's data is given as a string of m characters. Each character is a digit from 1-9. So for subject i (0-based?), the ith character in each student's string represents their mark.\n\nSo, for each subject index j (from 0 to m-1), we need to collect all the marks from each student's j-th position.\n\nThen, for each j, find the maximum value in that list. Then, count how many times this maximum appears. If count is 1, then the student(s) at those positions are the best for subject j.\n\nBut wait, each student may have multiple subjects where they are the best. We need to track for each student whether they are the best in any subject.\n\nSo, perhaps for each student, create a set of subjects where they are the sole maximum.\n\nThen, if this set is non-empty, the student is successful.\n\nSo, the steps are:\n\nLoop through each subject j from 0 to m-1:\n\n- Collect all the marks for this subject from all students.\n- Find the maximum mark in this subject.\n- Count how many students have this maximum mark.\n- If count == 1:\n   - For each student who has this maximum, add j to their list of best subjects.\n\nAfter processing all subjects, for each student, if their list is not empty, increment the successful count.\n\nNow, how to implement this.\n\nFirst, read the input.\n\nThe first line is n and m. Then, n lines follow, each being a string of m characters.\n\nSo, for example, the first sample input:\n\n3 3\n\n223\n\n232\n\n112\n\nThis would represent:\n\nStudent 1: 2,2,3\n\nStudent 2: 2,3,2\n\nStudent 3: 1,1,2\n\nFor each subject:\n\nSubject 0: 2,2,1 → max is 2, occurs 2 times. So no student is the best in this subject.\n\nSubject 1: 2,3,1 → max is 3, occurs once (student 2). So student 2 is best in subject 1.\n\nSubject 2: 3,2,2 → max is 3, occurs once (student 1). So student 1 is best in subject 2.\n\nThus, student 1 is best in two subjects (subjects 1 and 2), so he's successful. Student 2 is best in one subject, so he's successful. Student 3 is not best in any.\n\nSo output is 2.\n\nAnother example: second input.\n\n3 5\n\n91728\n\n11828\n\n11111\n\nLet's see each subject:\n\nSubject 0: '9','1','1' → max is 9, occurs once. So student 1 is best here.\n\nSubject 1: '1','8','1' → max is 8, occurs once. Student 2 is best.\n\nSubject 2: '7','2','1' → max is 7, occurs once",
    "response": "To solve this problem, we need to determine the number of successful students in a group based on their marks in various subjects. A student is considered successful if they are the best in at least one subject, meaning no other student has a higher mark in that subject.\n\n### Approach\n1. **Input Reading**: Read the number of students and subjects, followed by each student's marks.\n2. **Subject-wise Analysis**: For each subject, analyze the marks from all students to determine the highest mark and how many students achieved this mark.\n3. **Determine Best Students**: For each subject, if only one student achieves the highest mark, mark that student as the best in that subject.\n4. **Check Success**: Track which students are the best in any subject and count them as successful.\n\n### Solution Code\n```python\nn, m = map(int, input().split())\nstudents = [input().strip() for _ in range(n)]\n\nsubjects_best = {}  # key: subject index, value: list of student indices who are best in that subject\n\nfor j in range(m):\n    max_mark = -1\n    best_students = []\n    for i in range(n):\n        mark = int(students[i][j])\n        if mark > max_mark:\n            max_mark = mark\n            best_students = [i]\n        elif mark == max_mark:\n            best_students.append(i)\n    if len(best_students) == 1:\n        subjects_best[j] = best_students[0]\n\nsuccessful = 0\nfor i in range(n):\n    if i in subjects_best.values():\n        successful += 1\n\nprint(successful)\n```\n\n### Explanation\n1. **Reading Input**: The first line gives the number of students `n` and subjects `m`. The subsequent lines provide each student's marks as strings.\n2. **Processing Each Subject**: For each subject (from 0 to m-1), we iterate through each student's marks to find the maximum mark and identify all students who achieved this mark.\n3. **Identifying Best Students**: If only one student achieves the highest mark in a subject, they are marked as the best for that subject.\n4. **Counting Successful Students**: We check each student to see if they are the best in any subject. If so, they are counted as successful.\n\nThis approach efficiently processes each subject and determines the best students, ensuring that we correctly count the number of successful students.",
    "ground_truth": "N/A",
    "extracted_answer": "n, m = map(int, input().split())\nstudents = [input().strip() for _ in range(n)]\n\nsubjects_best = {}  # key: subject index, value: list of student indices who are best in that subject\n\nfor j in range(m):\n    max_mark = -1\n    best_students = []\n    for i in range(n):\n        mark = int(students[i][j])\n        if mark > max_mark:\n            max_mark = mark\n            best_students = [i]\n        elif mark == max_mark:\n            best_students.append(i)\n    if len(best_students) == 1:\n        subjects_best[j] = best_students[0]\n\nsuccessful = 0\nfor i in range(n):\n    if i in subjects_best.values():\n        successful += 1\n\nprint(successful)",
    "score": 0,
    "metadata": {
        "prompt_token_count": 431,
        "completion_token_count": 495,
        "thoughts_token_count": 1025
    }
}