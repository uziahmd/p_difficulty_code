{
    "start": 1757842731.999792,
    "end": 1757842741.485444,
    "start-formatted": "2025-09-14 18:38 KST",
    "end-formatted": "2025-09-14 18:39 KST",
    "gpu": 2,
    "pid": 3,
    "thought": "",
    "response": "```python\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().splitlines()\n    \n    n = int(data[0])\n    grid = data[1:]\n    \n    # Check if n is odd (as per problem statement, it's guaranteed)\n    # But we can still proceed\n    \n    # Collect characters from both diagonals\n    diag1 = set()\n    diag2 = set()\n    \n    for i in range(n):\n        diag1.add(grid[i][i])\n        diag2.add(grid[i][n - 1 - i])\n    \n    # If diagonals do not have the same character or more than one unique character\n    if len(diag1) != 1 or len(diag2) != 1 or diag1 != diag2:\n        print(\"NO\")\n        return\n    \n    diagonal_char = diag1.pop()\n    \n    # Check all other cells (not on diagonals)\n    other_char = None\n    for i in range(n):\n        for j in range(n):\n            if i == j or i + j == n - 1:\n                continue\n            if other_char is None:\n                other_char = grid[i][j]\n            elif grid[i][j] != other_char:\n                print(\"NO\")\n                return\n    \n    # Ensure other_char is different from diagonal_char\n    if other_char == diagonal_char:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n```",
    "ground_truth": "N/A",
    "extracted_answer": "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().splitlines()\n    \n    n = int(data[0])\n    grid = data[1:]\n    \n    # Check if n is odd (as per problem statement, it's guaranteed)\n    # But we can still proceed\n    \n    # Collect characters from both diagonals\n    diag1 = set()\n    diag2 = set()\n    \n    for i in range(n):\n        diag1.add(grid[i][i])\n        diag2.add(grid[i][n - 1 - i])\n    \n    # If diagonals do not have the same character or more than one unique character\n    if len(diag1) != 1 or len(diag2) != 1 or diag1 != diag2:\n        print(\"NO\")\n        return\n    \n    diagonal_char = diag1.pop()\n    \n    # Check all other cells (not on diagonals)\n    other_char = None\n    for i in range(n):\n        for j in range(n):\n            if i == j or i + j == n - 1:\n                continue\n            if other_char is None:\n                other_char = grid[i][j]\n            elif grid[i][j] != other_char:\n                print(\"NO\")\n                return\n    \n    # Ensure other_char is different from diagonal_char\n    if other_char == diagonal_char:\n        print(\"NO\")\n    else:\n        print(\"YES\")",
    "score": -1,
    "metadata": {
        "prompt_token_count": 463,
        "completion_token_count": 300,
        "thoughts_token_count": 0
    }
}