{
    "start": 1757842752.8992612,
    "end": 1757842774.5042076,
    "start-formatted": "2025-09-14 18:39 KST",
    "end-formatted": "2025-09-14 18:39 KST",
    "gpu": 2,
    "pid": 9,
    "thought": "",
    "response": "```python\nimport sys\nfrom collections import defaultdict\n\ndef solve():\n    input = sys.stdin.read\n    data = input().split('\\n')\n    \n    n = int(data[0])\n    l = data[1]\n    r = data[2]\n\n    # We will use dictionaries to count the number of each color in left and right boots\n    left_count = defaultdict(int)\n    right_count = defaultdict(int)\n\n    # First, count all colors in left and right boots\n    for c in l:\n        left_count[c] += 1\n    for c in r:\n        right_count[c] += 1\n\n    # Now, we'll try to match specific colors first\n    matched = 0\n    pairs = []\n\n    # For each color (excluding '?'), match as many as possible\n    for color in left_count:\n        if color == '?':\n            continue\n        if color in right_count:\n            match = min(left_count[color], right_count[color])\n            matched += match\n            # We need to track which indices are used\n            # So we'll create lists of indices for each color\n            left_indices = []\n            right_indices = []\n            for i in range(n):\n                if l[i] == color:\n                    left_indices.append(i + 1)\n                if r[i] == color:\n                    right_indices.append(i + 1)\n            # Pair them up\n            for i in range(match):\n                pairs.append((left_indices[i], right_indices[i]))\n            # Update counts\n            left_count[color] -= match\n            right_count[color] -= match\n\n    # Now handle the '?' in left and right\n    # First, match '?' in left with non-'?' in right\n    left_q = []\n    right_non_q = []\n    for i in range(n):\n        if l[i] == '?':\n            left_q.append(i + 1)\n        elif r[i] != '?':\n            right_non_q.append(i + 1)\n    # Pair them up\n    match = min(len(left_q), len(right_non_q))\n    matched += match\n    for i in range(match):\n        pairs.append((left_q[i], right_non_q[i]))\n\n    # Then, match '?' in right with non-'?' in left\n    right_q = []\n    left_non_q = []\n    for i in range(n):\n        if r[i] == '?':\n            right_q.append(i + 1)\n        elif l[i] != '?':\n            left_non_q.append(i + 1)\n    # Pair them up\n    match = min(len(right_q), len(left_non_q))\n    matched += match\n    for i in range(match):\n        pairs.append((left_non_q[i], right_q[i]))\n\n    # Finally, match '?' with '?'\n    left_q_remaining = []\n    right_q_remaining = []\n    for i in range(n):\n        if l[i] == '?':\n            left_q_remaining.append(i + 1)\n        if r[i] == '?':\n            right_q_remaining.append(i + 1)\n    match = min(len(left_q_remaining), len(right_q_remaining))\n    matched += match\n    for i in range(match):\n        pairs.append((left_q_remaining[i], right_q_remaining[i]))\n\n    print(matched)\n    for a, b in pairs:\n        print(f\"{a} {b}\")\n```",
    "ground_truth": "N/A",
    "extracted_answer": "import sys\nfrom collections import defaultdict\n\ndef solve():\n    input = sys.stdin.read\n    data = input().split('\\n')\n    \n    n = int(data[0])\n    l = data[1]\n    r = data[2]\n\n    # We will use dictionaries to count the number of each color in left and right boots\n    left_count = defaultdict(int)\n    right_count = defaultdict(int)\n\n    # First, count all colors in left and right boots\n    for c in l:\n        left_count[c] += 1\n    for c in r:\n        right_count[c] += 1\n\n    # Now, we'll try to match specific colors first\n    matched = 0\n    pairs = []\n\n    # For each color (excluding '?'), match as many as possible\n    for color in left_count:\n        if color == '?':\n            continue\n        if color in right_count:\n            match = min(left_count[color], right_count[color])\n            matched += match\n            # We need to track which indices are used\n            # So we'll create lists of indices for each color\n            left_indices = []\n            right_indices = []\n            for i in range(n):\n                if l[i] == color:\n                    left_indices.append(i + 1)\n                if r[i] == color:\n                    right_indices.append(i + 1)\n            # Pair them up\n            for i in range(match):\n                pairs.append((left_indices[i], right_indices[i]))\n            # Update counts\n            left_count[color] -= match\n            right_count[color] -= match\n\n    # Now handle the '?' in left and right\n    # First, match '?' in left with non-'?' in right\n    left_q = []\n    right_non_q = []\n    for i in range(n):\n        if l[i] == '?':\n            left_q.append(i + 1)\n        elif r[i] != '?':\n            right_non_q.append(i + 1)\n    # Pair them up\n    match = min(len(left_q), len(right_non_q))\n    matched += match\n    for i in range(match):\n        pairs.append((left_q[i], right_non_q[i]))\n\n    # Then, match '?' in right with non-'?' in left\n    right_q = []\n    left_non_q = []\n    for i in range(n):\n        if r[i] == '?':\n            right_q.append(i + 1)\n        elif l[i] != '?':\n            left_non_q.append(i + 1)\n    # Pair them up\n    match = min(len(right_q), len(left_non_q))\n    matched += match\n    for i in range(match):\n        pairs.append((left_non_q[i], right_q[i]))\n\n    # Finally, match '?' with '?'\n    left_q_remaining = []\n    right_q_remaining = []\n    for i in range(n):\n        if l[i] == '?':\n            left_q_remaining.append(i + 1)\n        if r[i] == '?':\n            right_q_remaining.append(i + 1)\n    match = min(len(left_q_remaining), len(right_q_remaining))\n    matched += match\n    for i in range(match):\n        pairs.append((left_q_remaining[i], right_q_remaining[i]))\n\n    print(matched)\n    for a, b in pairs:\n        print(f\"{a} {b}\")",
    "score": -1,
    "metadata": {
        "prompt_token_count": 818,
        "completion_token_count": 691,
        "thoughts_token_count": 0
    }
}