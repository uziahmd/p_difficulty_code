{
    "start": 1757842753.2760324,
    "end": 1757842772.833494,
    "start-formatted": "2025-09-14 18:39 KST",
    "end-formatted": "2025-09-14 18:39 KST",
    "gpu": 2,
    "pid": 9,
    "thought": "",
    "response": "```python\nimport sys\nfrom collections import defaultdict\n\ndef solve():\n    input = sys.stdin.read\n    data = input().split()\n    \n    n = int(data[0])\n    l = data[1]\n    r = data[2]\n\n    # Count specific colors in left and right boots\n    left_color_count = defaultdict(int)\n    right_color_count = defaultdict(int)\n    left_question = 0\n    right_question = 0\n\n    for c in l:\n        if c == '?':\n            left_question += 1\n        else:\n            left_color_count[c] += 1\n\n    for c in r:\n        if c == '?':\n            right_question += 1\n        else:\n            right_color_count[c] += 1\n\n    # Pair specific colors with matching ones\n    pairs = []\n    used_left = set()\n    used_right = set()\n\n    # Create a list of (color, indices) for both left and right\n    left_indices = defaultdict(list)\n    right_indices = defaultdict(list)\n\n    for i, c in enumerate(l):\n        left_indices[c].append(i + 1)  # 1-based index\n\n    for i, c in enumerate(r):\n        right_indices[c].append(i + 1)\n\n    # Match specific colors\n    for color in left_color_count:\n        if color in right_color_count:\n            min_count = min(left_color_count[color], right_color_count[color])\n            for _ in range(min_count):\n                pairs.append((left_indices[color].pop(), right_indices[color].pop()))\n                used_left.add(left_indices[color][-1])\n                used_right.add(right_indices[color][-1])\n\n    # Match question marks with specific colors\n    for color in right_color_count:\n        if color != '?' and left_question > 0:\n            count = min(right_color_count[color], left_question)\n            for _ in range(count):\n                pairs.append((left_indices['?'].pop(), right_indices[color].pop()))\n                used_left.add(left_indices['?'][-1])\n                used_right.add(right_indices[color][-1])\n                left_question -= 1\n\n    for color in left_color_count:\n        if color != '?' and right_question > 0:\n            count = min(left_color_count[color], right_question)\n            for _ in range(count):\n                pairs.append((left_indices[color].pop(), right_indices['?'].pop()))\n                used_left.add(left_indices[color][-1])\n                used_right.add(right_indices['?'][-1])\n                right_question -= 1\n\n    # Match remaining question marks with each other\n    if left_question > 0 and right_question > 0:\n        match_count = min(left_question, right_question)\n        for _ in range(match_count):\n            pairs.append((left_indices['?'].pop(), right_indices['?'].pop()))\n            used_left.add(left_indices['?'][-1])\n            used_right.add(right_indices['?'][-1])\n\n    print(len(pairs))\n    for a, b in pairs:\n        print(a, b)\n```",
    "ground_truth": "N/A",
    "extracted_answer": "import sys\nfrom collections import defaultdict\n\ndef solve():\n    input = sys.stdin.read\n    data = input().split()\n    \n    n = int(data[0])\n    l = data[1]\n    r = data[2]\n\n    # Count specific colors in left and right boots\n    left_color_count = defaultdict(int)\n    right_color_count = defaultdict(int)\n    left_question = 0\n    right_question = 0\n\n    for c in l:\n        if c == '?':\n            left_question += 1\n        else:\n            left_color_count[c] += 1\n\n    for c in r:\n        if c == '?':\n            right_question += 1\n        else:\n            right_color_count[c] += 1\n\n    # Pair specific colors with matching ones\n    pairs = []\n    used_left = set()\n    used_right = set()\n\n    # Create a list of (color, indices) for both left and right\n    left_indices = defaultdict(list)\n    right_indices = defaultdict(list)\n\n    for i, c in enumerate(l):\n        left_indices[c].append(i + 1)  # 1-based index\n\n    for i, c in enumerate(r):\n        right_indices[c].append(i + 1)\n\n    # Match specific colors\n    for color in left_color_count:\n        if color in right_color_count:\n            min_count = min(left_color_count[color], right_color_count[color])\n            for _ in range(min_count):\n                pairs.append((left_indices[color].pop(), right_indices[color].pop()))\n                used_left.add(left_indices[color][-1])\n                used_right.add(right_indices[color][-1])\n\n    # Match question marks with specific colors\n    for color in right_color_count:\n        if color != '?' and left_question > 0:\n            count = min(right_color_count[color], left_question)\n            for _ in range(count):\n                pairs.append((left_indices['?'].pop(), right_indices[color].pop()))\n                used_left.add(left_indices['?'][-1])\n                used_right.add(right_indices[color][-1])\n                left_question -= 1\n\n    for color in left_color_count:\n        if color != '?' and right_question > 0:\n            count = min(left_color_count[color], right_question)\n            for _ in range(count):\n                pairs.append((left_indices[color].pop(), right_indices['?'].pop()))\n                used_left.add(left_indices[color][-1])\n                used_right.add(right_indices['?'][-1])\n                right_question -= 1\n\n    # Match remaining question marks with each other\n    if left_question > 0 and right_question > 0:\n        match_count = min(left_question, right_question)\n        for _ in range(match_count):\n            pairs.append((left_indices['?'].pop(), right_indices['?'].pop()))\n            used_left.add(left_indices['?'][-1])\n            used_right.add(right_indices['?'][-1])\n\n    print(len(pairs))\n    for a, b in pairs:\n        print(a, b)",
    "score": -1,
    "metadata": {
        "prompt_token_count": 818,
        "completion_token_count": 626,
        "thoughts_token_count": 0
    }
}