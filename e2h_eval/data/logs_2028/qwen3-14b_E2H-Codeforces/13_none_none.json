{
    "start": 1757842762.9846163,
    "end": 1757842771.767072,
    "start-formatted": "2025-09-14 18:39 KST",
    "end-formatted": "2025-09-14 18:39 KST",
    "gpu": 2,
    "pid": 13,
    "thought": "",
    "response": "```python\nimport sys\nimport math\n\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    t = int(data[0])\n    cases = list(map(int, data[1:t+1]))\n    \n    def is_snowflake(n):\n        if n == 1:\n            return False\n        # Try all possible k > 1\n        # We need to find k such that n can be written as 1 + k + k*(k-1)*m for some m >= 1\n        # So n - 1 - k must be divisible by k*(k-1)\n        # And the result must be >= 1\n        # We try all k from 2 to sqrt(n) since k^2 <= n\n        max_k = int(math.isqrt(n)) + 2\n        for k in range(2, max_k):\n            if (n - 1 - k) % (k * (k - 1)) == 0:\n                m = (n - 1 - k) // (k * (k - 1))\n                if m >= 1:\n                    return True\n        return False\n    \n    for n in cases:\n        if is_snowflake(n):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n```",
    "ground_truth": "N/A",
    "extracted_answer": "import sys\nimport math\n\ndef solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    t = int(data[0])\n    cases = list(map(int, data[1:t+1]))\n    \n    def is_snowflake(n):\n        if n == 1:\n            return False\n        # Try all possible k > 1\n        # We need to find k such that n can be written as 1 + k + k*(k-1)*m for some m >= 1\n        # So n - 1 - k must be divisible by k*(k-1)\n        # And the result must be >= 1\n        # We try all k from 2 to sqrt(n) since k^2 <= n\n        max_k = int(math.isqrt(n)) + 2\n        for k in range(2, max_k):\n            if (n - 1 - k) % (k * (k - 1)) == 0:\n                m = (n - 1 - k) // (k * (k - 1))\n                if m >= 1:\n                    return True\n        return False\n    \n    for n in cases:\n        if is_snowflake(n):\n            print(\"YES\")\n        else:\n            print(\"NO\")",
    "score": -1,
    "metadata": {
        "prompt_token_count": 581,
        "completion_token_count": 280,
        "thoughts_token_count": 0
    }
}