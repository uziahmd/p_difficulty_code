{
    "start": 1758293680.3607807,
    "end": 1758293696.5833454,
    "start-formatted": "2025-09-19 23:54 KST",
    "end-formatted": "2025-09-19 23:54 KST",
    "gpu": 2,
    "pid": 54,
    "use_openrouter": 0,
    "prompt": [
        {
            "role": "user",
            "content": "The following is a competitive programming problem.\n\n# Mister B and Angle in Polygon\n\nOn one quiet day all of sudden Mister B decided to draw angle a on his field. Aliens have already visited his field and left many different geometric figures on it. One of the figures is regular convex n-gon (regular convex polygon with n sides).That's why Mister B decided to use this polygon. Now Mister B must find three distinct vertices v1, v2, v3 such that the angle  (where v2 is the vertex of the angle, and v1 and v3 lie on its sides) is as close as possible to a. In other words, the value  should be minimum possible.If there are many optimal solutions, Mister B should be satisfied with any of them.\n\n## Input\nFirst and only line contains two space-separated integers n and a (3 ≤ n ≤ 105, 1 ≤ a ≤ 180) — the number of vertices in the polygon and the needed angle, in degrees.\n\n## Output\nPrint three space-separated integers: the vertices v1, v2, v3, which form . If there are multiple optimal solutions, print any of them. The vertices are numbered from 1 to n in clockwise order.\n\n## Example\n### Input\n['3 15', '4 67', '4 68']\n\n### Output\n['1 2 3', '2 1 3', '4 1 2']\n\n## Note\nIn first sample test vertices of regular triangle can create only angle of 60 degrees, that's why every possible angle is correct.Vertices of square can create 45 or 90 degrees angles only. That's why in second sample test the angle of 45 degrees was chosen, since |45 - 67| < |90 - 67|. Other correct answers are: \"3 1 2\", \"3 2 4\", \"4 2 3\", \"4 3 1\", \"1 3 4\", \"1 4 2\", \"2 4 1\", \"4 1 3\", \"3 1 4\", \"3 4 2\", \"2 4 3\", \"2 3 1\", \"1 3 2\", \"1 2 4\", \"4 2 1\".In third sample test, on the contrary, the angle of 90 degrees was chosen, since |90 - 68| < |45 - 68|. Other correct answers are: \"2 1 4\", \"3 2 1\", \"1 2 3\", \"4 3 2\", \"2 3 4\", \"1 4 3\", \"3 4 1\".\n\nYour task is to solve the problem above by writing a Python script that reads input from standard input (stdin) and prints the desired outputs to standard output (stdout). Please ensure your solution is efficient and handles all edge cases. Make sure to include any necessary imports and helper functions. Your code should be ready to run and should not include any additional explanations or comments."
        }
    ],
    "thought": "",
    "response": "```python\ndef solve():\n    n, a = map(int, input().split())\n\n    min_diff = float('inf')\n    best_v1, best_v2, best_v3 = -1, -1, -1\n\n    # Fix v2 as vertex 2\n    v2 = 2\n\n    # Iterate through possible v1 (from 1 to n, excluding v2)\n    # Iterate through possible v3 (from 1 to n, excluding v2 and v1)\n\n    # For a regular n-gon, the vertices can be indexed from 1 to n.\n    # We can fix v2 as vertex 2 without loss of generality due to symmetry.\n    # The angle formed by v1-v2-v3 depends on the number of vertices\n    # between v1 and v3 (not including v1 and v3) along the perimeter,\n    # when viewed from v2.\n\n    # Let's fix v2 as vertex 2.\n    # Let v1 be vertex 1.\n    # Then v3 can be any vertex from 3 to n.\n    # The angle formed by (1, 2, k) where k is the third vertex.\n    # The angle is formed by the chords (1,2) and (2,k).\n    # The central angle subtended by a side is 360/n.\n    # The inscribed angle subtended by an arc of k sides is (k * (360/n)) / 2 = k * 180/n.\n\n    # We can fix v2 as vertex 2.\n    # We can fix v1 as vertex 1.\n    # Then v3 can be any vertex from 3 to n.\n    # The number of edges between v1 and v3 (passing through v2) is (v3 - v1).\n    # The number of edges between v2 and v3 is (v3 - v2).\n    # The number of edges between v1 and v2 is (v2 - v1).\n\n    # For v1=1, v2=2:\n    # The angle is formed by sides (1,2) and (2,k).\n    # The angle at vertex 2 is formed by chords (1,2) and (2,k).\n    # The number of edges between 1 and k (not passing through 2) is k-1.\n    # The number of edges between 1 and 2 is 1.\n    # The number of edges between 2 and k is k-2.\n    # The angle at vertex 2 is an inscribed angle subtending an arc of (k-1) edges.\n    # Each edge subtends an angle of (180 * (n-2) / n) / (n-2) = 180/n at the center. No, this is wrong.\n    # The internal angle of a regular n-gon is (n-2)*180/n.\n    # The angle at a vertex formed by two sides is (n-2)*180/n.\n\n    # An angle formed by three vertices v1, v2, v3 in a regular n-gon\n    # is an inscribed angle.\n    # The angle at v2 is half the central angle subtended by the arc (v1, v3).\n    # The arc (v1, v3) can be measured by the number of edges between v1 and v3\n    # (not passing through v2).\n    # Let's say we fix v2 as vertex 2.\n    # Let v1 be vertex 1.\n    # Then v3 can be any vertex from 3 to n.\n    # The number of edges on the arc from v1 to v3 (not containing v2) is (v3 - v1).\n    # So, for v1=1, v2=2, v3=k (where k ranges from 3 to n).\n    # The number of edges on the arc (1, k) is (k-1).\n    # The central angle subtended by one edge is 360/n.\n    # The central angle subtended by (k-1) edges is (k-1) * (360/n).\n    # The inscribed angle is half of this: (k-1) * (360/n) / 2 = (k-1) * 180/n.\n\n    # So, the possible angles are (k-1) * 180/n for k from 3 to n.\n    # This means the number of edges on the arc (v1, v3) can range from 2 to (n-1).\n    # (v3 - v1) can range from 2 to (n-1).\n    # For v1=1, v2=2, v3=3, the angle is (3-1)*180/n = 2*180/n.\n    # For v1=1, v2=2, v3=n, the angle is (n-1)*180/n.\n    # However, (n-1) edges would mean v3 is adjacent to v1, but on the other side.\n    # The number of edges on the arc (v1, v3) must be less than n-1.\n    # The maximum number of edges for an arc is (n-2) for a triangle.\n    # If v1, v2, v3 are distinct, then the number of edges on the arc (v1, v3)\n    # (not passing through v2) can range from 1 to n-2.\n    # The minimum number of edges is 1 (if v1 and v3 are adjacent to v2).\n    # The maximum number of edges is n-2 (if v2 is the only vertex not on the arc).\n\n    # Let's fix v2 as vertex 2.\n    # We want to find v1 and v3 such that the angle is close to 'a'.\n    # The angle is formed by chords v1-v2 and v2-v3.\n    # The angle at v2 is an inscribed angle subtending the arc from v1 to v3.\n    # Let the number of edges on the arc from v1 to v3 (not passing through v2) be `k`.\n    # `k` can range from 1 to n-2.\n    # The angle will be `k * (180 / n)` degrees.\n\n    # We need to find `k` (from 1 to n-2) such that `|k * (180 / n) - a|` is minimized.\n    # Once we find the optimal `k`, we can assign vertices.\n    # For example, v2=2.\n    # If k=1, v1=1, v3=3. Angle is 1 * 180/n.\n    # If k=2, v1=1, v3=4. Angle is 2 * 180/n.\n    # If k=j, v1=1, v3=j+2. Angle is j * 180/n.\n\n    # So, we iterate `k` from 1 to `n-2`.\n    for k in range(1, n - 1): # k is the number of sides on the arc v1-v3\n        current_angle = k * (180 / n)\n        diff = abs(current_angle - a)\n\n        if diff < min_diff:\n            min_diff = diff\n            # v2 is fixed as 2.\n            # v1 is fixed as 1.\n            # v3 is (2 + k).\n            # If v3 goes beyond n, we need to adjust, but since k <= n-2, 2+k <= 2+n-2 = n.\n            # So v3 = 2+k will always be a valid vertex from 3 to n.\n            best_v1 = 1\n            best_v2 = 2\n            best_v3 = 2 + k\n        elif diff == min_diff:\n            # If there are multiple optimal solutions, any is fine.\n            # We can just keep the first one found.\n            pass\n\n    print(best_v1, best_v2, best_v3)\n\nsolve()\n\n```",
    "ground_truth": "N/A",
    "extracted_answer": "def solve():\n    n, a = map(int, input().split())\n\n    min_diff = float('inf')\n    best_v1, best_v2, best_v3 = -1, -1, -1\n\n    # Fix v2 as vertex 2\n    v2 = 2\n\n    # Iterate through possible v1 (from 1 to n, excluding v2)\n    # Iterate through possible v3 (from 1 to n, excluding v2 and v1)\n\n    # For a regular n-gon, the vertices can be indexed from 1 to n.\n    # We can fix v2 as vertex 2 without loss of generality due to symmetry.\n    # The angle formed by v1-v2-v3 depends on the number of vertices\n    # between v1 and v3 (not including v1 and v3) along the perimeter,\n    # when viewed from v2.\n\n    # Let's fix v2 as vertex 2.\n    # Let v1 be vertex 1.\n    # Then v3 can be any vertex from 3 to n.\n    # The angle formed by (1, 2, k) where k is the third vertex.\n    # The angle is formed by the chords (1,2) and (2,k).\n    # The central angle subtended by a side is 360/n.\n    # The inscribed angle subtended by an arc of k sides is (k * (360/n)) / 2 = k * 180/n.\n\n    # We can fix v2 as vertex 2.\n    # We can fix v1 as vertex 1.\n    # Then v3 can be any vertex from 3 to n.\n    # The number of edges between v1 and v3 (passing through v2) is (v3 - v1).\n    # The number of edges between v2 and v3 is (v3 - v2).\n    # The number of edges between v1 and v2 is (v2 - v1).\n\n    # For v1=1, v2=2:\n    # The angle is formed by sides (1,2) and (2,k).\n    # The angle at vertex 2 is formed by chords (1,2) and (2,k).\n    # The number of edges between 1 and k (not passing through 2) is k-1.\n    # The number of edges between 1 and 2 is 1.\n    # The number of edges between 2 and k is k-2.\n    # The angle at vertex 2 is an inscribed angle subtending an arc of (k-1) edges.\n    # Each edge subtends an angle of (180 * (n-2) / n) / (n-2) = 180/n at the center. No, this is wrong.\n    # The internal angle of a regular n-gon is (n-2)*180/n.\n    # The angle at a vertex formed by two sides is (n-2)*180/n.\n\n    # An angle formed by three vertices v1, v2, v3 in a regular n-gon\n    # is an inscribed angle.\n    # The angle at v2 is half the central angle subtended by the arc (v1, v3).\n    # The arc (v1, v3) can be measured by the number of edges between v1 and v3\n    # (not passing through v2).\n    # Let's say we fix v2 as vertex 2.\n    # Let v1 be vertex 1.\n    # Then v3 can be any vertex from 3 to n.\n    # The number of edges on the arc from v1 to v3 (not containing v2) is (v3 - v1).\n    # So, for v1=1, v2=2, v3=k (where k ranges from 3 to n).\n    # The number of edges on the arc (1, k) is (k-1).\n    # The central angle subtended by one edge is 360/n.\n    # The central angle subtended by (k-1) edges is (k-1) * (360/n).\n    # The inscribed angle is half of this: (k-1) * (360/n) / 2 = (k-1) * 180/n.\n\n    # So, the possible angles are (k-1) * 180/n for k from 3 to n.\n    # This means the number of edges on the arc (v1, v3) can range from 2 to (n-1).\n    # (v3 - v1) can range from 2 to (n-1).\n    # For v1=1, v2=2, v3=3, the angle is (3-1)*180/n = 2*180/n.\n    # For v1=1, v2=2, v3=n, the angle is (n-1)*180/n.\n    # However, (n-1) edges would mean v3 is adjacent to v1, but on the other side.\n    # The number of edges on the arc (v1, v3) must be less than n-1.\n    # The maximum number of edges for an arc is (n-2) for a triangle.\n    # If v1, v2, v3 are distinct, then the number of edges on the arc (v1, v3)\n    # (not passing through v2) can range from 1 to n-2.\n    # The minimum number of edges is 1 (if v1 and v3 are adjacent to v2).\n    # The maximum number of edges is n-2 (if v2 is the only vertex not on the arc).\n\n    # Let's fix v2 as vertex 2.\n    # We want to find v1 and v3 such that the angle is close to 'a'.\n    # The angle is formed by chords v1-v2 and v2-v3.\n    # The angle at v2 is an inscribed angle subtending the arc from v1 to v3.\n    # Let the number of edges on the arc from v1 to v3 (not passing through v2) be `k`.\n    # `k` can range from 1 to n-2.\n    # The angle will be `k * (180 / n)` degrees.\n\n    # We need to find `k` (from 1 to n-2) such that `|k * (180 / n) - a|` is minimized.\n    # Once we find the optimal `k`, we can assign vertices.\n    # For example, v2=2.\n    # If k=1, v1=1, v3=3. Angle is 1 * 180/n.\n    # If k=2, v1=1, v3=4. Angle is 2 * 180/n.\n    # If k=j, v1=1, v3=j+2. Angle is j * 180/n.\n\n    # So, we iterate `k` from 1 to `n-2`.\n    for k in range(1, n - 1): # k is the number of sides on the arc v1-v3\n        current_angle = k * (180 / n)\n        diff = abs(current_angle - a)\n\n        if diff < min_diff:\n            min_diff = diff\n            # v2 is fixed as 2.\n            # v1 is fixed as 1.\n            # v3 is (2 + k).\n            # If v3 goes beyond n, we need to adjust, but since k <= n-2, 2+k <= 2+n-2 = n.\n            # So v3 = 2+k will always be a valid vertex from 3 to n.\n            best_v1 = 1\n            best_v2 = 2\n            best_v3 = 2 + k\n        elif diff == min_diff:\n            # If there are multiple optimal solutions, any is fine.\n            # We can just keep the first one found.\n            pass\n\n    print(best_v1, best_v2, best_v3)\n\nsolve()",
    "score": 0,
    "metadata": {
        "prompt_token_count": 729,
        "completion_token_count": 1900,
        "thoughts_token_count": 0
    }
}